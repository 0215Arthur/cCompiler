

Terminals which are not used:

   TYPE_NAME


Conflict in state 280 between rule 152 and token ELSE resolved as shift.

Grammar
rule 1    Program -> translation_unit
rule 2    primary_expression -> IDENTIFIER
rule 3    primary_expression -> TRUE
rule 4    primary_expression -> FALSE
rule 5    primary_expression -> CONSTANT
rule 6    primary_expression -> CONSTANT_INT
rule 7    primary_expression -> CONSTANT_DOUBLE
rule 8    primary_expression -> STRING_LITERAL
rule 9    primary_expression -> '(' expression ')'
rule 10   postfix_expression -> primary_expression
rule 11   postfix_expression -> postfix_expression '[' expression ']'
rule 12   postfix_expression -> postfix_expression '(' ')'
rule 13   postfix_expression -> postfix_expression '(' argument_expression_list ')'
rule 14   postfix_expression -> postfix_expression '.' IDENTIFIER
rule 15   postfix_expression -> postfix_expression PTR_OP IDENTIFIER
rule 16   postfix_expression -> postfix_expression INC_OP
rule 17   postfix_expression -> postfix_expression DEC_OP
rule 18   postfix_expression -> '(' type_name ')' '{' initializer_list '}'
rule 19   postfix_expression -> '(' type_name ')' '{' initializer_list ',' '}'
rule 20   argument_expression_list -> assignment_expression
rule 21   argument_expression_list -> argument_expression_list ',' assignment_expression
rule 22   unary_expression -> postfix_expression
rule 23   unary_expression -> INC_OP unary_expression
rule 24   unary_expression -> DEC_OP unary_expression
rule 25   unary_expression -> unary_operator cast_expression
rule 26   unary_expression -> SIZEOF unary_expression
rule 27   unary_expression -> SIZEOF '(' type_name ')'
rule 28   unary_operator -> '&'
rule 29   unary_operator -> '*'
rule 30   unary_operator -> '+'
rule 31   unary_operator -> '-'
rule 32   unary_operator -> '~'
rule 33   unary_operator -> '!'
rule 34   cast_expression -> unary_expression
rule 35   cast_expression -> '(' type_name ')' cast_expression
rule 36   multiplicative_expression -> cast_expression
rule 37   multiplicative_expression -> multiplicative_expression '*' cast_expression
rule 38   multiplicative_expression -> multiplicative_expression '/' cast_expression
rule 39   multiplicative_expression -> multiplicative_expression '%' cast_expression
rule 40   additive_expression -> multiplicative_expression
rule 41   additive_expression -> additive_expression '+' multiplicative_expression
rule 42   additive_expression -> additive_expression '-' multiplicative_expression
rule 43   shift_expression -> additive_expression
rule 44   shift_expression -> shift_expression LEFT_OP additive_expression
rule 45   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 46   relational_expression -> shift_expression
rule 47   relational_expression -> relational_expression '<' shift_expression
rule 48   relational_expression -> relational_expression '>' shift_expression
rule 49   relational_expression -> relational_expression LE_OP shift_expression
rule 50   relational_expression -> relational_expression GE_OP shift_expression
rule 51   equality_expression -> relational_expression
rule 52   equality_expression -> equality_expression EQ_OP relational_expression
rule 53   equality_expression -> equality_expression NE_OP relational_expression
rule 54   and_expression -> equality_expression
rule 55   and_expression -> and_expression '&' equality_expression
rule 56   exclusive_or_expression -> and_expression
rule 57   exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 58   inclusive_or_expression -> exclusive_or_expression
rule 59   inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 60   logical_and_expression -> inclusive_or_expression
rule 61   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 62   logical_or_expression -> logical_and_expression
rule 63   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 64   conditional_expression -> logical_or_expression
rule 65   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 66   assignment_expression -> conditional_expression
rule 67   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 68   assignment_operator -> '='
rule 69   assignment_operator -> MUL_ASSIGN
rule 70   assignment_operator -> DIV_ASSIGN
rule 71   assignment_operator -> MOD_ASSIGN
rule 72   assignment_operator -> ADD_ASSIGN
rule 73   assignment_operator -> SUB_ASSIGN
rule 74   assignment_operator -> LEFT_ASSIGN
rule 75   assignment_operator -> RIGHT_ASSIGN
rule 76   assignment_operator -> AND_ASSIGN
rule 77   assignment_operator -> XOR_ASSIGN
rule 78   assignment_operator -> OR_ASSIGN
rule 79   expression -> assignment_expression
rule 80   expression -> expression ',' assignment_expression
rule 81   constant_expression -> conditional_expression
rule 82   declaration -> type_specifier ';'
rule 83   declaration -> type_specifier init_declarator_list ';'
rule 84   init_declarator_list -> init_declarator
rule 85   init_declarator_list -> init_declarator_list ',' init_declarator
rule 86   init_declarator -> declarator
rule 87   init_declarator -> declarator '=' initializer
rule 88   type_specifier -> VOID
rule 89   type_specifier -> CHAR
rule 90   type_specifier -> INT
rule 91   type_specifier -> DOUBLE
rule 92   type_specifier -> BOOL
rule 93   specifier_qualifier_list -> type_specifier specifier_qualifier_list
rule 94   specifier_qualifier_list -> type_specifier
rule 95   declarator -> IDENTIFIER
rule 96   declarator -> '(' declarator ')'
rule 97   declarator -> declarator '[' assignment_expression ']'
rule 98   declarator -> declarator '[' '*' ']'
rule 99   declarator -> declarator '[' ']'
rule 100  declarator -> declarator '(' parameter_list ')'
rule 101  declarator -> declarator '(' identifier_list ')'
rule 102  declarator -> declarator '(' ')'
rule 103  parameter_list -> parameter_declaration
rule 104  parameter_list -> parameter_list ',' parameter_declaration
rule 105  parameter_declaration -> type_specifier declarator
rule 106  parameter_declaration -> type_specifier abstract_declarator
rule 107  parameter_declaration -> type_specifier
rule 108  identifier_list -> IDENTIFIER
rule 109  identifier_list -> identifier_list ',' IDENTIFIER
rule 110  type_name -> specifier_qualifier_list
rule 111  type_name -> specifier_qualifier_list abstract_declarator
rule 112  abstract_declarator -> direct_abstract_declarator
rule 113  direct_abstract_declarator -> '(' abstract_declarator ')'
rule 114  direct_abstract_declarator -> '[' ']'
rule 115  direct_abstract_declarator -> '[' assignment_expression ']'
rule 116  direct_abstract_declarator -> direct_abstract_declarator '[' ']'
rule 117  direct_abstract_declarator -> direct_abstract_declarator '[' assignment_expression ']'
rule 118  direct_abstract_declarator -> '[' '*' ']'
rule 119  direct_abstract_declarator -> direct_abstract_declarator '[' '*' ']'
rule 120  direct_abstract_declarator -> '(' ')'
rule 121  direct_abstract_declarator -> '(' parameter_list ')'
rule 122  direct_abstract_declarator -> direct_abstract_declarator '(' ')'
rule 123  direct_abstract_declarator -> direct_abstract_declarator '(' parameter_list ')'
rule 124  initializer -> assignment_expression
rule 125  initializer -> '{' initializer_list '}'
rule 126  initializer -> '{' initializer_list ',' '}'
rule 127  initializer_list -> initializer
rule 128  initializer_list -> designation initializer
rule 129  initializer_list -> initializer_list ',' initializer
rule 130  initializer_list -> initializer_list ',' designation initializer
rule 131  designation -> designator_list '='
rule 132  designator_list -> designator
rule 133  designator_list -> designator_list designator
rule 134  designator -> '[' constant_expression ']'
rule 135  designator -> '.' IDENTIFIER
rule 136  statement -> labeled_statement
rule 137  statement -> compound_statement
rule 138  statement -> expression_statement
rule 139  statement -> selection_statement
rule 140  statement -> iteration_statement
rule 141  statement -> jump_statement
rule 142  labeled_statement -> IDENTIFIER ':' statement
rule 143  labeled_statement -> CASE constant_expression ':' statement
rule 144  compound_statement -> '{' '}'
rule 145  compound_statement -> '{' block_item_list '}'
rule 146  block_item_list -> block_item
rule 147  block_item_list -> block_item_list block_item
rule 148  block_item -> declaration
rule 149  block_item -> statement
rule 150  expression_statement -> ';'
rule 151  expression_statement -> expression ';'
rule 152  selection_statement -> IF '(' expression ')' statement
rule 153  selection_statement -> IF '(' expression ')' statement ELSE statement
rule 154  selection_statement -> SWITCH '(' expression ')' statement
rule 155  iteration_statement -> WHILE '(' expression ')' statement
rule 156  iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 157  iteration_statement -> FOR '(' expression_statement expression_statement ')' statement
rule 158  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 159  iteration_statement -> FOR '(' declaration expression_statement ')' statement
rule 160  iteration_statement -> FOR '(' declaration expression_statement expression ')' statement
rule 161  jump_statement -> GOTO IDENTIFIER ';'
rule 162  jump_statement -> CONTINUE ';'
rule 163  jump_statement -> BREAK ';'
rule 164  jump_statement -> RETURN ';'
rule 165  jump_statement -> RETURN expression ';'
rule 166  translation_unit -> external_declaration
rule 167  translation_unit -> translation_unit external_declaration
rule 168  external_declaration -> function_definition
rule 169  external_declaration -> declaration
rule 170  function_definition -> type_specifier declarator declaration_list compound_statement
rule 171  function_definition -> type_specifier declarator compound_statement
rule 172  declaration_list -> declaration
rule 173  declaration_list -> declaration_list declaration

Terminals, with rules where they appear

$ (-1)
'!' (33) 33
'%' (37) 39
'&' (38) 28 55
'(' (40) 9 12 13 18 19 27 35 96 100 101 102 113 120 121 122 123 152
    153 154 155 156 157 158 159 160
')' (41) 9 12 13 18 19 27 35 96 100 101 102 113 120 121 122 123 152
    153 154 155 156 157 158 159 160
'*' (42) 29 37 98 118 119
'+' (43) 30 41
',' (44) 19 21 80 85 104 109 126 129 130
'-' (45) 31 42
'.' (46) 14 135
'/' (47) 38
':' (58) 65 142 143
';' (59) 82 83 150 151 156 161 162 163 164 165
'<' (60) 47
'=' (61) 68 87 131
'>' (62) 48
'?' (63) 65
'[' (91) 11 97 98 99 114 115 116 117 118 119 134
']' (93) 11 97 98 99 114 115 116 117 118 119 134
'^' (94) 57
'{' (123) 18 19 125 126 144 145
'|' (124) 59
'}' (125) 18 19 125 126 144 145
'~' (126) 32
error (256)
IDENTIFIER (257) 2 14 15 95 108 109 135 142 161
CONSTANT (258) 5
STRING_LITERAL (259) 8
SIZEOF (260) 26 27
CONSTANT_INT (261) 6
CONSTANT_DOUBLE (262) 7
PTR_OP (263) 15
INC_OP (264) 16 23
DEC_OP (265) 17 24
LEFT_OP (266) 44
RIGHT_OP (267) 45
LE_OP (268) 49
GE_OP (269) 50
EQ_OP (270) 52
NE_OP (271) 53
AND_OP (272) 61
OR_OP (273) 63
MUL_ASSIGN (274) 69
DIV_ASSIGN (275) 70
MOD_ASSIGN (276) 71
ADD_ASSIGN (277) 72
SUB_ASSIGN (278) 73
LEFT_ASSIGN (279) 74
RIGHT_ASSIGN (280) 75
AND_ASSIGN (281) 76
XOR_ASSIGN (282) 77
OR_ASSIGN (283) 78
TYPE_NAME (284)
CHAR (285) 89
INT (286) 90
DOUBLE (287) 91
VOID (288) 88
BOOL (289) 92
CASE (290) 143
IF (291) 152 153
ELSE (292) 153
SWITCH (293) 154
WHILE (294) 155 156
DO (295) 156
FOR (296) 157 158 159 160
GOTO (297) 161
CONTINUE (298) 162
BREAK (299) 163
RETURN (300) 164 165
TRUE (301) 3
FALSE (302) 4
LOWER_THAN_ELSE (303)

Nonterminals, with rules where they appear

Program (74)
    on left: 1
primary_expression (75)
    on left: 2 3 4 5 6 7 8 9, on right: 10
postfix_expression (76)
    on left: 10 11 12 13 14 15 16 17 18 19, on right: 11 12 13 14 15
    16 17 22
argument_expression_list (77)
    on left: 20 21, on right: 13 21
unary_expression (78)
    on left: 22 23 24 25 26 27, on right: 23 24 26 34 67
unary_operator (79)
    on left: 28 29 30 31 32 33, on right: 25
cast_expression (80)
    on left: 34 35, on right: 25 35 36 37 38 39
multiplicative_expression (81)
    on left: 36 37 38 39, on right: 37 38 39 40 41 42
additive_expression (82)
    on left: 40 41 42, on right: 41 42 43 44 45
shift_expression (83)
    on left: 43 44 45, on right: 44 45 46 47 48 49 50
relational_expression (84)
    on left: 46 47 48 49 50, on right: 47 48 49 50 51 52 53
equality_expression (85)
    on left: 51 52 53, on right: 52 53 54 55
and_expression (86)
    on left: 54 55, on right: 55 56 57
exclusive_or_expression (87)
    on left: 56 57, on right: 57 58 59
inclusive_or_expression (88)
    on left: 58 59, on right: 59 60 61
logical_and_expression (89)
    on left: 60 61, on right: 61 62 63
logical_or_expression (90)
    on left: 62 63, on right: 63 64 65
conditional_expression (91)
    on left: 64 65, on right: 65 66 81
assignment_expression (92)
    on left: 66 67, on right: 20 21 67 79 80 97 115 117 124
assignment_operator (93)
    on left: 68 69 70 71 72 73 74 75 76 77 78, on right: 67
expression (94)
    on left: 79 80, on right: 9 11 65 80 151 152 153 154 155 156 158
    160 165
constant_expression (95)
    on left: 81, on right: 134 143
declaration (96)
    on left: 82 83, on right: 148 159 160 169 172 173
init_declarator_list (97)
    on left: 84 85, on right: 83 85
init_declarator (98)
    on left: 86 87, on right: 84 85
type_specifier (99)
    on left: 88 89 90 91 92, on right: 82 83 93 94 105 106 107 170
    171
specifier_qualifier_list (100)
    on left: 93 94, on right: 93 110 111
declarator (101)
    on left: 95 96 97 98 99 100 101 102, on right: 86 87 96 97 98 99
    100 101 102 105 170 171
parameter_list (102)
    on left: 103 104, on right: 100 104 121 123
parameter_declaration (103)
    on left: 105 106 107, on right: 103 104
identifier_list (104)
    on left: 108 109, on right: 101 109
type_name (105)
    on left: 110 111, on right: 18 19 27 35
abstract_declarator (106)
    on left: 112, on right: 106 111 113
direct_abstract_declarator (107)
    on left: 113 114 115 116 117 118 119 120 121 122 123,
    on right: 112 116 117 119 122 123
initializer (108)
    on left: 124 125 126, on right: 87 127 128 129 130
initializer_list (109)
    on left: 127 128 129 130, on right: 18 19 125 126 129 130
designation (110)
    on left: 131, on right: 128 130
designator_list (111)
    on left: 132 133, on right: 131 133
designator (112)
    on left: 134 135, on right: 132 133
statement (113)
    on left: 136 137 138 139 140 141, on right: 142 143 149 152 153
    154 155 156 157 158 159 160
labeled_statement (114)
    on left: 142 143, on right: 136
compound_statement (115)
    on left: 144 145, on right: 137 170 171
block_item_list (116)
    on left: 146 147, on right: 145 147
block_item (117)
    on left: 148 149, on right: 146 147
expression_statement (118)
    on left: 150 151, on right: 138 157 158 159 160
selection_statement (119)
    on left: 152 153 154, on right: 139
iteration_statement (120)
    on left: 155 156 157 158 159 160, on right: 140
jump_statement (121)
    on left: 161 162 163 164 165, on right: 141
translation_unit (122)
    on left: 166 167, on right: 1 167
external_declaration (123)
    on left: 168 169, on right: 166 167
function_definition (124)
    on left: 170 171, on right: 168
declaration_list (125)
    on left: 172 173, on right: 170 173


state 0

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5

    Program	go to state 304
    declaration	go to state 6
    type_specifier	go to state 7
    translation_unit	go to state 8
    external_declaration	go to state 9
    function_definition	go to state 10



state 1

    type_specifier  ->  CHAR .   (rule 89)

    $default	reduce using rule 89 (type_specifier)



state 2

    type_specifier  ->  INT .   (rule 90)

    $default	reduce using rule 90 (type_specifier)



state 3

    type_specifier  ->  DOUBLE .   (rule 91)

    $default	reduce using rule 91 (type_specifier)



state 4

    type_specifier  ->  VOID .   (rule 88)

    $default	reduce using rule 88 (type_specifier)



state 5

    type_specifier  ->  BOOL .   (rule 92)

    $default	reduce using rule 92 (type_specifier)



state 6

    external_declaration  ->  declaration .   (rule 169)

    $default	reduce using rule 169 (external_declaration)



state 7

    declaration  ->  type_specifier . ';'   (rule 82)
    declaration  ->  type_specifier . init_declarator_list ';'   (rule 83)
    function_definition  ->  type_specifier . declarator declaration_list compound_statement   (rule 170)
    function_definition  ->  type_specifier . declarator compound_statement   (rule 171)

    IDENTIFIER	shift, and go to state 11
    ';' 	shift, and go to state 12
    '(' 	shift, and go to state 13

    init_declarator_list	go to state 14
    init_declarator	go to state 15
    declarator	go to state 16



state 8

    Program  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_declaration   (rule 167)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5

    $default	reduce using rule 1 (Program)

    declaration	go to state 6
    type_specifier	go to state 7
    external_declaration	go to state 17
    function_definition	go to state 10



state 9

    translation_unit  ->  external_declaration .   (rule 166)

    $default	reduce using rule 166 (translation_unit)



state 10

    external_declaration  ->  function_definition .   (rule 168)

    $default	reduce using rule 168 (external_declaration)



state 11

    declarator  ->  IDENTIFIER .   (rule 95)

    $default	reduce using rule 95 (declarator)



state 12

    declaration  ->  type_specifier ';' .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 13

    declarator  ->  '(' . declarator ')'   (rule 96)

    IDENTIFIER	shift, and go to state 11
    '(' 	shift, and go to state 13

    declarator	go to state 18



state 14

    declaration  ->  type_specifier init_declarator_list . ';'   (rule 83)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 85)

    ';' 	shift, and go to state 19
    ',' 	shift, and go to state 20



state 15

    init_declarator_list  ->  init_declarator .   (rule 84)

    $default	reduce using rule 84 (init_declarator_list)



state 16

    init_declarator  ->  declarator .   (rule 86)
    init_declarator  ->  declarator . '=' initializer   (rule 87)
    declarator  ->  declarator . '[' assignment_expression ']'   (rule 97)
    declarator  ->  declarator . '[' '*' ']'   (rule 98)
    declarator  ->  declarator . '[' ']'   (rule 99)
    declarator  ->  declarator . '(' parameter_list ')'   (rule 100)
    declarator  ->  declarator . '(' identifier_list ')'   (rule 101)
    declarator  ->  declarator . '(' ')'   (rule 102)
    function_definition  ->  type_specifier declarator . declaration_list compound_statement   (rule 170)
    function_definition  ->  type_specifier declarator . compound_statement   (rule 171)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    '=' 	shift, and go to state 21
    '[' 	shift, and go to state 22
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    $default	reduce using rule 86 (init_declarator)

    declaration	go to state 25
    type_specifier	go to state 26
    compound_statement	go to state 27
    declaration_list	go to state 28



state 17

    translation_unit  ->  translation_unit external_declaration .   (rule 167)

    $default	reduce using rule 167 (translation_unit)



state 18

    declarator  ->  '(' declarator . ')'   (rule 96)
    declarator  ->  declarator . '[' assignment_expression ']'   (rule 97)
    declarator  ->  declarator . '[' '*' ']'   (rule 98)
    declarator  ->  declarator . '[' ']'   (rule 99)
    declarator  ->  declarator . '(' parameter_list ')'   (rule 100)
    declarator  ->  declarator . '(' identifier_list ')'   (rule 101)
    declarator  ->  declarator . '(' ')'   (rule 102)

    '[' 	shift, and go to state 22
    '(' 	shift, and go to state 24
    ')' 	shift, and go to state 29



state 19

    declaration  ->  type_specifier init_declarator_list ';' .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 20

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 85)

    IDENTIFIER	shift, and go to state 11
    '(' 	shift, and go to state 13

    init_declarator	go to state 30
    declarator	go to state 31



state 21

    init_declarator  ->  declarator '=' . initializer   (rule 87)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 48
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 66
    initializer	go to state 67



state 22

    declarator  ->  declarator '[' . assignment_expression ']'   (rule 97)
    declarator  ->  declarator '[' . '*' ']'   (rule 98)
    declarator  ->  declarator '[' . ']'   (rule 99)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ']' 	shift, and go to state 68
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 69
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 70



state 23

    compound_statement  ->  '{' . '}'   (rule 144)
    compound_statement  ->  '{' . block_item_list '}'   (rule 145)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '}' 	shift, and go to state 83
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    declaration	go to state 86
    type_specifier	go to state 26
    statement	go to state 87
    labeled_statement	go to state 88
    compound_statement	go to state 89
    block_item_list	go to state 90
    block_item	go to state 91
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 24

    declarator  ->  declarator '(' . parameter_list ')'   (rule 100)
    declarator  ->  declarator '(' . identifier_list ')'   (rule 101)
    declarator  ->  declarator '(' . ')'   (rule 102)

    IDENTIFIER	shift, and go to state 96
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    ')' 	shift, and go to state 97

    type_specifier	go to state 98
    parameter_list	go to state 99
    parameter_declaration	go to state 100
    identifier_list	go to state 101



state 25

    declaration_list  ->  declaration .   (rule 172)

    $default	reduce using rule 172 (declaration_list)



state 26

    declaration  ->  type_specifier . ';'   (rule 82)
    declaration  ->  type_specifier . init_declarator_list ';'   (rule 83)

    IDENTIFIER	shift, and go to state 11
    ';' 	shift, and go to state 12
    '(' 	shift, and go to state 13

    init_declarator_list	go to state 14
    init_declarator	go to state 15
    declarator	go to state 31



state 27

    function_definition  ->  type_specifier declarator compound_statement .   (rule 171)

    $default	reduce using rule 171 (function_definition)



state 28

    function_definition  ->  type_specifier declarator declaration_list . compound_statement   (rule 170)
    declaration_list  ->  declaration_list . declaration   (rule 173)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    '{' 	shift, and go to state 23

    declaration	go to state 102
    type_specifier	go to state 26
    compound_statement	go to state 103



state 29

    declarator  ->  '(' declarator ')' .   (rule 96)

    $default	reduce using rule 96 (declarator)



state 30

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 85)

    $default	reduce using rule 85 (init_declarator_list)



state 31

    init_declarator  ->  declarator .   (rule 86)
    init_declarator  ->  declarator . '=' initializer   (rule 87)
    declarator  ->  declarator . '[' assignment_expression ']'   (rule 97)
    declarator  ->  declarator . '[' '*' ']'   (rule 98)
    declarator  ->  declarator . '[' ']'   (rule 99)
    declarator  ->  declarator . '(' parameter_list ')'   (rule 100)
    declarator  ->  declarator . '(' identifier_list ')'   (rule 101)
    declarator  ->  declarator . '(' ')'   (rule 102)

    '=' 	shift, and go to state 21
    '[' 	shift, and go to state 22
    '(' 	shift, and go to state 24

    $default	reduce using rule 86 (init_declarator)



state 32

    primary_expression  ->  IDENTIFIER .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 33

    primary_expression  ->  CONSTANT .   (rule 5)

    $default	reduce using rule 5 (primary_expression)



state 34

    primary_expression  ->  STRING_LITERAL .   (rule 8)

    $default	reduce using rule 8 (primary_expression)



state 35

    unary_expression  ->  SIZEOF . unary_expression   (rule 26)
    unary_expression  ->  SIZEOF . '(' type_name ')'   (rule 27)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 104

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 105
    unary_operator	go to state 53



state 36

    primary_expression  ->  CONSTANT_INT .   (rule 6)

    $default	reduce using rule 6 (primary_expression)



state 37

    primary_expression  ->  CONSTANT_DOUBLE .   (rule 7)

    $default	reduce using rule 7 (primary_expression)



state 38

    unary_expression  ->  INC_OP . unary_expression   (rule 23)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 106

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 107
    unary_operator	go to state 53



state 39

    unary_expression  ->  DEC_OP . unary_expression   (rule 24)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 106

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 108
    unary_operator	go to state 53



state 40

    primary_expression  ->  TRUE .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 41

    primary_expression  ->  FALSE .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 42

    unary_operator  ->  '&' .   (rule 28)

    $default	reduce using rule 28 (unary_operator)



state 43

    unary_operator  ->  '!' .   (rule 33)

    $default	reduce using rule 33 (unary_operator)



state 44

    unary_operator  ->  '~' .   (rule 32)

    $default	reduce using rule 32 (unary_operator)



state 45

    unary_operator  ->  '-' .   (rule 31)

    $default	reduce using rule 31 (unary_operator)



state 46

    unary_operator  ->  '+' .   (rule 30)

    $default	reduce using rule 30 (unary_operator)



state 47

    unary_operator  ->  '*' .   (rule 29)

    $default	reduce using rule 29 (unary_operator)



state 48

    initializer  ->  '{' . initializer_list '}'   (rule 125)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 126)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '[' 	shift, and go to state 109
    '.' 	shift, and go to state 110
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 48
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 66
    initializer	go to state 111
    initializer_list	go to state 112
    designation	go to state 113
    designator_list	go to state 114
    designator	go to state 115



state 49

    primary_expression  ->  '(' . expression ')'   (rule 9)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list ',' '}'   (rule 19)
    cast_expression  ->  '(' . type_name ')' cast_expression   (rule 35)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 116
    type_specifier	go to state 117
    specifier_qualifier_list	go to state 118
    type_name	go to state 119



state 50

    postfix_expression  ->  primary_expression .   (rule 10)

    $default	reduce using rule 10 (postfix_expression)



state 51

    postfix_expression  ->  postfix_expression . '[' expression ']'   (rule 11)
    postfix_expression  ->  postfix_expression . '(' ')'   (rule 12)
    postfix_expression  ->  postfix_expression . '(' argument_expression_list ')'   (rule 13)
    postfix_expression  ->  postfix_expression . '.' IDENTIFIER   (rule 14)
    postfix_expression  ->  postfix_expression . PTR_OP IDENTIFIER   (rule 15)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 16)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 17)
    unary_expression  ->  postfix_expression .   (rule 22)

    PTR_OP	shift, and go to state 120
    INC_OP	shift, and go to state 121
    DEC_OP	shift, and go to state 122
    '[' 	shift, and go to state 123
    '.' 	shift, and go to state 124
    '(' 	shift, and go to state 125

    $default	reduce using rule 22 (unary_expression)



state 52

    cast_expression  ->  unary_expression .   (rule 34)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 67)

    MUL_ASSIGN	shift, and go to state 126
    DIV_ASSIGN	shift, and go to state 127
    MOD_ASSIGN	shift, and go to state 128
    ADD_ASSIGN	shift, and go to state 129
    SUB_ASSIGN	shift, and go to state 130
    LEFT_ASSIGN	shift, and go to state 131
    RIGHT_ASSIGN	shift, and go to state 132
    AND_ASSIGN	shift, and go to state 133
    XOR_ASSIGN	shift, and go to state 134
    OR_ASSIGN	shift, and go to state 135
    '=' 	shift, and go to state 136

    $default	reduce using rule 34 (cast_expression)

    assignment_operator	go to state 137



state 53

    unary_expression  ->  unary_operator . cast_expression   (rule 25)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 139



state 54

    multiplicative_expression  ->  cast_expression .   (rule 36)

    $default	reduce using rule 36 (multiplicative_expression)



state 55

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 39)
    additive_expression  ->  multiplicative_expression .   (rule 40)

    '*' 	shift, and go to state 140
    '/' 	shift, and go to state 141
    '%' 	shift, and go to state 142

    $default	reduce using rule 40 (additive_expression)



state 56

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 42)
    shift_expression  ->  additive_expression .   (rule 43)

    '-' 	shift, and go to state 143
    '+' 	shift, and go to state 144

    $default	reduce using rule 43 (shift_expression)



state 57

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  shift_expression .   (rule 46)

    LEFT_OP	shift, and go to state 145
    RIGHT_OP	shift, and go to state 146

    $default	reduce using rule 46 (relational_expression)



state 58

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 47)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  relational_expression .   (rule 51)

    LE_OP	shift, and go to state 147
    GE_OP	shift, and go to state 148
    '<' 	shift, and go to state 149
    '>' 	shift, and go to state 150

    $default	reduce using rule 51 (equality_expression)



state 59

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 52)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 53)
    and_expression  ->  equality_expression .   (rule 54)

    EQ_OP	shift, and go to state 151
    NE_OP	shift, and go to state 152

    $default	reduce using rule 54 (and_expression)



state 60

    and_expression  ->  and_expression . '&' equality_expression   (rule 55)
    exclusive_or_expression  ->  and_expression .   (rule 56)

    '&' 	shift, and go to state 153

    $default	reduce using rule 56 (exclusive_or_expression)



state 61

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 57)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 58)

    '^' 	shift, and go to state 154

    $default	reduce using rule 58 (inclusive_or_expression)



state 62

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 59)
    logical_and_expression  ->  inclusive_or_expression .   (rule 60)

    '|' 	shift, and go to state 155

    $default	reduce using rule 60 (logical_and_expression)



state 63

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 61)
    logical_or_expression  ->  logical_and_expression .   (rule 62)

    AND_OP	shift, and go to state 156

    $default	reduce using rule 62 (logical_or_expression)



state 64

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 63)
    conditional_expression  ->  logical_or_expression .   (rule 64)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 65)

    OR_OP	shift, and go to state 157
    '?' 	shift, and go to state 158

    $default	reduce using rule 64 (conditional_expression)



state 65

    assignment_expression  ->  conditional_expression .   (rule 66)

    $default	reduce using rule 66 (assignment_expression)



state 66

    initializer  ->  assignment_expression .   (rule 124)

    $default	reduce using rule 124 (initializer)



state 67

    init_declarator  ->  declarator '=' initializer .   (rule 87)

    $default	reduce using rule 87 (init_declarator)



state 68

    declarator  ->  declarator '[' ']' .   (rule 99)

    $default	reduce using rule 99 (declarator)



state 69

    unary_operator  ->  '*' .   (rule 29)
    declarator  ->  declarator '[' '*' . ']'   (rule 98)

    ']' 	shift, and go to state 159

    $default	reduce using rule 29 (unary_operator)



state 70

    declarator  ->  declarator '[' assignment_expression . ']'   (rule 97)

    ']' 	shift, and go to state 160



state 71

    primary_expression  ->  IDENTIFIER .   (rule 2)
    labeled_statement  ->  IDENTIFIER . ':' statement   (rule 142)

    ':' 	shift, and go to state 161

    $default	reduce using rule 2 (primary_expression)



state 72

    labeled_statement  ->  CASE . constant_expression ':' statement   (rule 143)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 162
    constant_expression	go to state 163



state 73

    selection_statement  ->  IF . '(' expression ')' statement   (rule 152)
    selection_statement  ->  IF . '(' expression ')' statement ELSE statement   (rule 153)

    '(' 	shift, and go to state 164



state 74

    selection_statement  ->  SWITCH . '(' expression ')' statement   (rule 154)

    '(' 	shift, and go to state 165



state 75

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 155)

    '(' 	shift, and go to state 166



state 76

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 156)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    statement	go to state 167
    labeled_statement	go to state 88
    compound_statement	go to state 89
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 77

    iteration_statement  ->  FOR . '(' expression_statement expression_statement ')' statement   (rule 157)
    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 158)
    iteration_statement  ->  FOR . '(' declaration expression_statement ')' statement   (rule 159)
    iteration_statement  ->  FOR . '(' declaration expression_statement expression ')' statement   (rule 160)

    '(' 	shift, and go to state 168



state 78

    jump_statement  ->  GOTO . IDENTIFIER ';'   (rule 161)

    IDENTIFIER	shift, and go to state 169



state 79

    jump_statement  ->  CONTINUE . ';'   (rule 162)

    ';' 	shift, and go to state 170



state 80

    jump_statement  ->  BREAK . ';'   (rule 163)

    ';' 	shift, and go to state 171



state 81

    jump_statement  ->  RETURN . ';'   (rule 164)
    jump_statement  ->  RETURN . expression ';'   (rule 165)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 172
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 173



state 82

    expression_statement  ->  ';' .   (rule 150)

    $default	reduce using rule 150 (expression_statement)



state 83

    compound_statement  ->  '{' '}' .   (rule 144)

    $default	reduce using rule 144 (compound_statement)



state 84

    expression  ->  assignment_expression .   (rule 79)

    $default	reduce using rule 79 (expression)



state 85

    expression  ->  expression . ',' assignment_expression   (rule 80)
    expression_statement  ->  expression . ';'   (rule 151)

    ';' 	shift, and go to state 174
    ',' 	shift, and go to state 175



state 86

    block_item  ->  declaration .   (rule 148)

    $default	reduce using rule 148 (block_item)



state 87

    block_item  ->  statement .   (rule 149)

    $default	reduce using rule 149 (block_item)



state 88

    statement  ->  labeled_statement .   (rule 136)

    $default	reduce using rule 136 (statement)



state 89

    statement  ->  compound_statement .   (rule 137)

    $default	reduce using rule 137 (statement)



state 90

    compound_statement  ->  '{' block_item_list . '}'   (rule 145)
    block_item_list  ->  block_item_list . block_item   (rule 147)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '}' 	shift, and go to state 176
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    declaration	go to state 86
    type_specifier	go to state 26
    statement	go to state 87
    labeled_statement	go to state 88
    compound_statement	go to state 89
    block_item	go to state 177
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 91

    block_item_list  ->  block_item .   (rule 146)

    $default	reduce using rule 146 (block_item_list)



state 92

    statement  ->  expression_statement .   (rule 138)

    $default	reduce using rule 138 (statement)



state 93

    statement  ->  selection_statement .   (rule 139)

    $default	reduce using rule 139 (statement)



state 94

    statement  ->  iteration_statement .   (rule 140)

    $default	reduce using rule 140 (statement)



state 95

    statement  ->  jump_statement .   (rule 141)

    $default	reduce using rule 141 (statement)



state 96

    identifier_list  ->  IDENTIFIER .   (rule 108)

    $default	reduce using rule 108 (identifier_list)



state 97

    declarator  ->  declarator '(' ')' .   (rule 102)

    $default	reduce using rule 102 (declarator)



state 98

    parameter_declaration  ->  type_specifier . declarator   (rule 105)
    parameter_declaration  ->  type_specifier . abstract_declarator   (rule 106)
    parameter_declaration  ->  type_specifier .   (rule 107)

    IDENTIFIER	shift, and go to state 11
    '[' 	shift, and go to state 178
    '(' 	shift, and go to state 179

    $default	reduce using rule 107 (parameter_declaration)

    declarator	go to state 180
    abstract_declarator	go to state 181
    direct_abstract_declarator	go to state 182



state 99

    declarator  ->  declarator '(' parameter_list . ')'   (rule 100)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 104)

    ',' 	shift, and go to state 183
    ')' 	shift, and go to state 184



state 100

    parameter_list  ->  parameter_declaration .   (rule 103)

    $default	reduce using rule 103 (parameter_list)



state 101

    declarator  ->  declarator '(' identifier_list . ')'   (rule 101)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 109)

    ',' 	shift, and go to state 185
    ')' 	shift, and go to state 186



state 102

    declaration_list  ->  declaration_list declaration .   (rule 173)

    $default	reduce using rule 173 (declaration_list)



state 103

    function_definition  ->  type_specifier declarator declaration_list compound_statement .   (rule 170)

    $default	reduce using rule 170 (function_definition)



state 104

    primary_expression  ->  '(' . expression ')'   (rule 9)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list ',' '}'   (rule 19)
    unary_expression  ->  SIZEOF '(' . type_name ')'   (rule 27)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 116
    type_specifier	go to state 117
    specifier_qualifier_list	go to state 118
    type_name	go to state 187



state 105

    unary_expression  ->  SIZEOF unary_expression .   (rule 26)

    $default	reduce using rule 26 (unary_expression)



state 106

    primary_expression  ->  '(' . expression ')'   (rule 9)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list ',' '}'   (rule 19)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 116
    type_specifier	go to state 117
    specifier_qualifier_list	go to state 118
    type_name	go to state 188



state 107

    unary_expression  ->  INC_OP unary_expression .   (rule 23)

    $default	reduce using rule 23 (unary_expression)



state 108

    unary_expression  ->  DEC_OP unary_expression .   (rule 24)

    $default	reduce using rule 24 (unary_expression)



state 109

    designator  ->  '[' . constant_expression ']'   (rule 134)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 162
    constant_expression	go to state 189



state 110

    designator  ->  '.' . IDENTIFIER   (rule 135)

    IDENTIFIER	shift, and go to state 190



state 111

    initializer_list  ->  initializer .   (rule 127)

    $default	reduce using rule 127 (initializer_list)



state 112

    initializer  ->  '{' initializer_list . '}'   (rule 125)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 126)
    initializer_list  ->  initializer_list . ',' initializer   (rule 129)
    initializer_list  ->  initializer_list . ',' designation initializer   (rule 130)

    ',' 	shift, and go to state 191
    '}' 	shift, and go to state 192



state 113

    initializer_list  ->  designation . initializer   (rule 128)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 48
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 66
    initializer	go to state 193



state 114

    designation  ->  designator_list . '='   (rule 131)
    designator_list  ->  designator_list . designator   (rule 133)

    '=' 	shift, and go to state 194
    '[' 	shift, and go to state 109
    '.' 	shift, and go to state 110

    designator	go to state 195



state 115

    designator_list  ->  designator .   (rule 132)

    $default	reduce using rule 132 (designator_list)



state 116

    primary_expression  ->  '(' expression . ')'   (rule 9)
    expression  ->  expression . ',' assignment_expression   (rule 80)

    ',' 	shift, and go to state 175
    ')' 	shift, and go to state 196



state 117

    specifier_qualifier_list  ->  type_specifier . specifier_qualifier_list   (rule 93)
    specifier_qualifier_list  ->  type_specifier .   (rule 94)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5

    $default	reduce using rule 94 (specifier_qualifier_list)

    type_specifier	go to state 117
    specifier_qualifier_list	go to state 197



state 118

    type_name  ->  specifier_qualifier_list .   (rule 110)
    type_name  ->  specifier_qualifier_list . abstract_declarator   (rule 111)

    '[' 	shift, and go to state 178
    '(' 	shift, and go to state 198

    $default	reduce using rule 110 (type_name)

    abstract_declarator	go to state 199
    direct_abstract_declarator	go to state 182



state 119

    postfix_expression  ->  '(' type_name . ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name . ')' '{' initializer_list ',' '}'   (rule 19)
    cast_expression  ->  '(' type_name . ')' cast_expression   (rule 35)

    ')' 	shift, and go to state 200



state 120

    postfix_expression  ->  postfix_expression PTR_OP . IDENTIFIER   (rule 15)

    IDENTIFIER	shift, and go to state 201



state 121

    postfix_expression  ->  postfix_expression INC_OP .   (rule 16)

    $default	reduce using rule 16 (postfix_expression)



state 122

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 17)

    $default	reduce using rule 17 (postfix_expression)



state 123

    postfix_expression  ->  postfix_expression '[' . expression ']'   (rule 11)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 202



state 124

    postfix_expression  ->  postfix_expression '.' . IDENTIFIER   (rule 14)

    IDENTIFIER	shift, and go to state 203



state 125

    postfix_expression  ->  postfix_expression '(' . ')'   (rule 12)
    postfix_expression  ->  postfix_expression '(' . argument_expression_list ')'   (rule 13)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49
    ')' 	shift, and go to state 204

    primary_expression	go to state 50
    postfix_expression	go to state 51
    argument_expression_list	go to state 205
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 206



state 126

    assignment_operator  ->  MUL_ASSIGN .   (rule 69)

    $default	reduce using rule 69 (assignment_operator)



state 127

    assignment_operator  ->  DIV_ASSIGN .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 128

    assignment_operator  ->  MOD_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 129

    assignment_operator  ->  ADD_ASSIGN .   (rule 72)

    $default	reduce using rule 72 (assignment_operator)



state 130

    assignment_operator  ->  SUB_ASSIGN .   (rule 73)

    $default	reduce using rule 73 (assignment_operator)



state 131

    assignment_operator  ->  LEFT_ASSIGN .   (rule 74)

    $default	reduce using rule 74 (assignment_operator)



state 132

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 75)

    $default	reduce using rule 75 (assignment_operator)



state 133

    assignment_operator  ->  AND_ASSIGN .   (rule 76)

    $default	reduce using rule 76 (assignment_operator)



state 134

    assignment_operator  ->  XOR_ASSIGN .   (rule 77)

    $default	reduce using rule 77 (assignment_operator)



state 135

    assignment_operator  ->  OR_ASSIGN .   (rule 78)

    $default	reduce using rule 78 (assignment_operator)



state 136

    assignment_operator  ->  '=' .   (rule 68)

    $default	reduce using rule 68 (assignment_operator)



state 137

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 67)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 207



state 138

    cast_expression  ->  unary_expression .   (rule 34)

    $default	reduce using rule 34 (cast_expression)



state 139

    unary_expression  ->  unary_operator cast_expression .   (rule 25)

    $default	reduce using rule 25 (unary_expression)



state 140

    multiplicative_expression  ->  multiplicative_expression '*' . cast_expression   (rule 37)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 208



state 141

    multiplicative_expression  ->  multiplicative_expression '/' . cast_expression   (rule 38)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 209



state 142

    multiplicative_expression  ->  multiplicative_expression '%' . cast_expression   (rule 39)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 210



state 143

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 42)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 211



state 144

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 41)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 212



state 145

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 44)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 213



state 146

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 45)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 214



state 147

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 49)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 215



state 148

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 50)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 216



state 149

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 47)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 217



state 150

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 48)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 218



state 151

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 52)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 219



state 152

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 53)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 220



state 153

    and_expression  ->  and_expression '&' . equality_expression   (rule 55)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 221



state 154

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 57)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 222



state 155

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 59)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 223



state 156

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 61)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 224



state 157

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 63)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 225



state 158

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 65)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 226



state 159

    declarator  ->  declarator '[' '*' ']' .   (rule 98)

    $default	reduce using rule 98 (declarator)



state 160

    declarator  ->  declarator '[' assignment_expression ']' .   (rule 97)

    $default	reduce using rule 97 (declarator)



state 161

    labeled_statement  ->  IDENTIFIER ':' . statement   (rule 142)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    statement	go to state 227
    labeled_statement	go to state 88
    compound_statement	go to state 89
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 162

    constant_expression  ->  conditional_expression .   (rule 81)

    $default	reduce using rule 81 (constant_expression)



state 163

    labeled_statement  ->  CASE constant_expression . ':' statement   (rule 143)

    ':' 	shift, and go to state 228



state 164

    selection_statement  ->  IF '(' . expression ')' statement   (rule 152)
    selection_statement  ->  IF '(' . expression ')' statement ELSE statement   (rule 153)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 229



state 165

    selection_statement  ->  SWITCH '(' . expression ')' statement   (rule 154)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 230



state 166

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 155)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 231



state 167

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 156)

    WHILE	shift, and go to state 232



state 168

    iteration_statement  ->  FOR '(' . expression_statement expression_statement ')' statement   (rule 157)
    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 158)
    iteration_statement  ->  FOR '(' . declaration expression_statement ')' statement   (rule 159)
    iteration_statement  ->  FOR '(' . declaration expression_statement expression ')' statement   (rule 160)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    declaration	go to state 233
    type_specifier	go to state 26
    expression_statement	go to state 234



state 169

    jump_statement  ->  GOTO IDENTIFIER . ';'   (rule 161)

    ';' 	shift, and go to state 235



state 170

    jump_statement  ->  CONTINUE ';' .   (rule 162)

    $default	reduce using rule 162 (jump_statement)



state 171

    jump_statement  ->  BREAK ';' .   (rule 163)

    $default	reduce using rule 163 (jump_statement)



state 172

    jump_statement  ->  RETURN ';' .   (rule 164)

    $default	reduce using rule 164 (jump_statement)



state 173

    expression  ->  expression . ',' assignment_expression   (rule 80)
    jump_statement  ->  RETURN expression . ';'   (rule 165)

    ';' 	shift, and go to state 236
    ',' 	shift, and go to state 175



state 174

    expression_statement  ->  expression ';' .   (rule 151)

    $default	reduce using rule 151 (expression_statement)



state 175

    expression  ->  expression ',' . assignment_expression   (rule 80)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 237



state 176

    compound_statement  ->  '{' block_item_list '}' .   (rule 145)

    $default	reduce using rule 145 (compound_statement)



state 177

    block_item_list  ->  block_item_list block_item .   (rule 147)

    $default	reduce using rule 147 (block_item_list)



state 178

    direct_abstract_declarator  ->  '[' . ']'   (rule 114)
    direct_abstract_declarator  ->  '[' . assignment_expression ']'   (rule 115)
    direct_abstract_declarator  ->  '[' . '*' ']'   (rule 118)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ']' 	shift, and go to state 238
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 239
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 240



state 179

    declarator  ->  '(' . declarator ')'   (rule 96)
    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 113)
    direct_abstract_declarator  ->  '(' . ')'   (rule 120)
    direct_abstract_declarator  ->  '(' . parameter_list ')'   (rule 121)

    IDENTIFIER	shift, and go to state 11
    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    '[' 	shift, and go to state 178
    '(' 	shift, and go to state 179
    ')' 	shift, and go to state 241

    type_specifier	go to state 98
    declarator	go to state 18
    parameter_list	go to state 242
    parameter_declaration	go to state 100
    abstract_declarator	go to state 243
    direct_abstract_declarator	go to state 182



state 180

    declarator  ->  declarator . '[' assignment_expression ']'   (rule 97)
    declarator  ->  declarator . '[' '*' ']'   (rule 98)
    declarator  ->  declarator . '[' ']'   (rule 99)
    declarator  ->  declarator . '(' parameter_list ')'   (rule 100)
    declarator  ->  declarator . '(' identifier_list ')'   (rule 101)
    declarator  ->  declarator . '(' ')'   (rule 102)
    parameter_declaration  ->  type_specifier declarator .   (rule 105)

    '[' 	shift, and go to state 22
    '(' 	shift, and go to state 24

    $default	reduce using rule 105 (parameter_declaration)



state 181

    parameter_declaration  ->  type_specifier abstract_declarator .   (rule 106)

    $default	reduce using rule 106 (parameter_declaration)



state 182

    abstract_declarator  ->  direct_abstract_declarator .   (rule 112)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 116)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' assignment_expression ']'   (rule 117)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' '*' ']'   (rule 119)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 122)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_list ')'   (rule 123)

    '[' 	shift, and go to state 244
    '(' 	shift, and go to state 245

    $default	reduce using rule 112 (abstract_declarator)



state 183

    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 104)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5

    type_specifier	go to state 98
    parameter_declaration	go to state 246



state 184

    declarator  ->  declarator '(' parameter_list ')' .   (rule 100)

    $default	reduce using rule 100 (declarator)



state 185

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 109)

    IDENTIFIER	shift, and go to state 247



state 186

    declarator  ->  declarator '(' identifier_list ')' .   (rule 101)

    $default	reduce using rule 101 (declarator)



state 187

    postfix_expression  ->  '(' type_name . ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name . ')' '{' initializer_list ',' '}'   (rule 19)
    unary_expression  ->  SIZEOF '(' type_name . ')'   (rule 27)

    ')' 	shift, and go to state 248



state 188

    postfix_expression  ->  '(' type_name . ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name . ')' '{' initializer_list ',' '}'   (rule 19)

    ')' 	shift, and go to state 249



state 189

    designator  ->  '[' constant_expression . ']'   (rule 134)

    ']' 	shift, and go to state 250



state 190

    designator  ->  '.' IDENTIFIER .   (rule 135)

    $default	reduce using rule 135 (designator)



state 191

    initializer  ->  '{' initializer_list ',' . '}'   (rule 126)
    initializer_list  ->  initializer_list ',' . initializer   (rule 129)
    initializer_list  ->  initializer_list ',' . designation initializer   (rule 130)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '[' 	shift, and go to state 109
    '.' 	shift, and go to state 110
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 48
    '}' 	shift, and go to state 251
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 66
    initializer	go to state 252
    designation	go to state 253
    designator_list	go to state 114
    designator	go to state 115



state 192

    initializer  ->  '{' initializer_list '}' .   (rule 125)

    $default	reduce using rule 125 (initializer)



state 193

    initializer_list  ->  designation initializer .   (rule 128)

    $default	reduce using rule 128 (initializer_list)



state 194

    designation  ->  designator_list '=' .   (rule 131)

    $default	reduce using rule 131 (designation)



state 195

    designator_list  ->  designator_list designator .   (rule 133)

    $default	reduce using rule 133 (designator_list)



state 196

    primary_expression  ->  '(' expression ')' .   (rule 9)

    $default	reduce using rule 9 (primary_expression)



state 197

    specifier_qualifier_list  ->  type_specifier specifier_qualifier_list .   (rule 93)

    $default	reduce using rule 93 (specifier_qualifier_list)



state 198

    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 113)
    direct_abstract_declarator  ->  '(' . ')'   (rule 120)
    direct_abstract_declarator  ->  '(' . parameter_list ')'   (rule 121)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    '[' 	shift, and go to state 178
    '(' 	shift, and go to state 198
    ')' 	shift, and go to state 241

    type_specifier	go to state 98
    parameter_list	go to state 242
    parameter_declaration	go to state 100
    abstract_declarator	go to state 243
    direct_abstract_declarator	go to state 182



state 199

    type_name  ->  specifier_qualifier_list abstract_declarator .   (rule 111)

    $default	reduce using rule 111 (type_name)



state 200

    postfix_expression  ->  '(' type_name ')' . '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name ')' . '{' initializer_list ',' '}'   (rule 19)
    cast_expression  ->  '(' type_name ')' . cast_expression   (rule 35)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 254
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 255



state 201

    postfix_expression  ->  postfix_expression PTR_OP IDENTIFIER .   (rule 15)

    $default	reduce using rule 15 (postfix_expression)



state 202

    postfix_expression  ->  postfix_expression '[' expression . ']'   (rule 11)
    expression  ->  expression . ',' assignment_expression   (rule 80)

    ',' 	shift, and go to state 175
    ']' 	shift, and go to state 256



state 203

    postfix_expression  ->  postfix_expression '.' IDENTIFIER .   (rule 14)

    $default	reduce using rule 14 (postfix_expression)



state 204

    postfix_expression  ->  postfix_expression '(' ')' .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 205

    postfix_expression  ->  postfix_expression '(' argument_expression_list . ')'   (rule 13)
    argument_expression_list  ->  argument_expression_list . ',' assignment_expression   (rule 21)

    ',' 	shift, and go to state 257
    ')' 	shift, and go to state 258



state 206

    argument_expression_list  ->  assignment_expression .   (rule 20)

    $default	reduce using rule 20 (argument_expression_list)



state 207

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 67)

    $default	reduce using rule 67 (assignment_expression)



state 208

    multiplicative_expression  ->  multiplicative_expression '*' cast_expression .   (rule 37)

    $default	reduce using rule 37 (multiplicative_expression)



state 209

    multiplicative_expression  ->  multiplicative_expression '/' cast_expression .   (rule 38)

    $default	reduce using rule 38 (multiplicative_expression)



state 210

    multiplicative_expression  ->  multiplicative_expression '%' cast_expression .   (rule 39)

    $default	reduce using rule 39 (multiplicative_expression)



state 211

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 39)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 42)

    '*' 	shift, and go to state 140
    '/' 	shift, and go to state 141
    '%' 	shift, and go to state 142

    $default	reduce using rule 42 (additive_expression)



state 212

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 39)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 41)

    '*' 	shift, and go to state 140
    '/' 	shift, and go to state 141
    '%' 	shift, and go to state 142

    $default	reduce using rule 41 (additive_expression)



state 213

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 42)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 44)

    '-' 	shift, and go to state 143
    '+' 	shift, and go to state 144

    $default	reduce using rule 44 (shift_expression)



state 214

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 42)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 45)

    '-' 	shift, and go to state 143
    '+' 	shift, and go to state 144

    $default	reduce using rule 45 (shift_expression)



state 215

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 49)

    LEFT_OP	shift, and go to state 145
    RIGHT_OP	shift, and go to state 146

    $default	reduce using rule 49 (relational_expression)



state 216

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 50)

    LEFT_OP	shift, and go to state 145
    RIGHT_OP	shift, and go to state 146

    $default	reduce using rule 50 (relational_expression)



state 217

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression '<' shift_expression .   (rule 47)

    LEFT_OP	shift, and go to state 145
    RIGHT_OP	shift, and go to state 146

    $default	reduce using rule 47 (relational_expression)



state 218

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression '>' shift_expression .   (rule 48)

    LEFT_OP	shift, and go to state 145
    RIGHT_OP	shift, and go to state 146

    $default	reduce using rule 48 (relational_expression)



state 219

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 47)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 52)

    LE_OP	shift, and go to state 147
    GE_OP	shift, and go to state 148
    '<' 	shift, and go to state 149
    '>' 	shift, and go to state 150

    $default	reduce using rule 52 (equality_expression)



state 220

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 47)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 53)

    LE_OP	shift, and go to state 147
    GE_OP	shift, and go to state 148
    '<' 	shift, and go to state 149
    '>' 	shift, and go to state 150

    $default	reduce using rule 53 (equality_expression)



state 221

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 52)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 53)
    and_expression  ->  and_expression '&' equality_expression .   (rule 55)

    EQ_OP	shift, and go to state 151
    NE_OP	shift, and go to state 152

    $default	reduce using rule 55 (and_expression)



state 222

    and_expression  ->  and_expression . '&' equality_expression   (rule 55)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 57)

    '&' 	shift, and go to state 153

    $default	reduce using rule 57 (exclusive_or_expression)



state 223

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 57)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 59)

    '^' 	shift, and go to state 154

    $default	reduce using rule 59 (inclusive_or_expression)



state 224

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 59)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 61)

    '|' 	shift, and go to state 155

    $default	reduce using rule 61 (logical_and_expression)



state 225

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 61)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 63)

    AND_OP	shift, and go to state 156

    $default	reduce using rule 63 (logical_or_expression)



state 226

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 65)
    expression  ->  expression . ',' assignment_expression   (rule 80)

    ',' 	shift, and go to state 175
    ':' 	shift, and go to state 259



state 227

    labeled_statement  ->  IDENTIFIER ':' statement .   (rule 142)

    $default	reduce using rule 142 (labeled_statement)



state 228

    labeled_statement  ->  CASE constant_expression ':' . statement   (rule 143)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    statement	go to state 260
    labeled_statement	go to state 88
    compound_statement	go to state 89
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 229

    expression  ->  expression . ',' assignment_expression   (rule 80)
    selection_statement  ->  IF '(' expression . ')' statement   (rule 152)
    selection_statement  ->  IF '(' expression . ')' statement ELSE statement   (rule 153)

    ',' 	shift, and go to state 175
    ')' 	shift, and go to state 261



state 230

    expression  ->  expression . ',' assignment_expression   (rule 80)
    selection_statement  ->  SWITCH '(' expression . ')' statement   (rule 154)

    ',' 	shift, and go to state 175
    ')' 	shift, and go to state 262



state 231

    expression  ->  expression . ',' assignment_expression   (rule 80)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 155)

    ',' 	shift, and go to state 175
    ')' 	shift, and go to state 263



state 232

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 156)

    '(' 	shift, and go to state 264



state 233

    iteration_statement  ->  FOR '(' declaration . expression_statement ')' statement   (rule 159)
    iteration_statement  ->  FOR '(' declaration . expression_statement expression ')' statement   (rule 160)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    expression_statement	go to state 265



state 234

    iteration_statement  ->  FOR '(' expression_statement . expression_statement ')' statement   (rule 157)
    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 158)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    expression_statement	go to state 266



state 235

    jump_statement  ->  GOTO IDENTIFIER ';' .   (rule 161)

    $default	reduce using rule 161 (jump_statement)



state 236

    jump_statement  ->  RETURN expression ';' .   (rule 165)

    $default	reduce using rule 165 (jump_statement)



state 237

    expression  ->  expression ',' assignment_expression .   (rule 80)

    $default	reduce using rule 80 (expression)



state 238

    direct_abstract_declarator  ->  '[' ']' .   (rule 114)

    $default	reduce using rule 114 (direct_abstract_declarator)



state 239

    unary_operator  ->  '*' .   (rule 29)
    direct_abstract_declarator  ->  '[' '*' . ']'   (rule 118)

    ']' 	shift, and go to state 267

    $default	reduce using rule 29 (unary_operator)



state 240

    direct_abstract_declarator  ->  '[' assignment_expression . ']'   (rule 115)

    ']' 	shift, and go to state 268



state 241

    direct_abstract_declarator  ->  '(' ')' .   (rule 120)

    $default	reduce using rule 120 (direct_abstract_declarator)



state 242

    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 104)
    direct_abstract_declarator  ->  '(' parameter_list . ')'   (rule 121)

    ',' 	shift, and go to state 183
    ')' 	shift, and go to state 269



state 243

    direct_abstract_declarator  ->  '(' abstract_declarator . ')'   (rule 113)

    ')' 	shift, and go to state 270



state 244

    direct_abstract_declarator  ->  direct_abstract_declarator '[' . ']'   (rule 116)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' . assignment_expression ']'   (rule 117)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' . '*' ']'   (rule 119)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ']' 	shift, and go to state 271
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 272
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 273



state 245

    direct_abstract_declarator  ->  direct_abstract_declarator '(' . ')'   (rule 122)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' . parameter_list ')'   (rule 123)

    CHAR	shift, and go to state 1
    INT 	shift, and go to state 2
    DOUBLE	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 5
    ')' 	shift, and go to state 274

    type_specifier	go to state 98
    parameter_list	go to state 275
    parameter_declaration	go to state 100



state 246

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 104)

    $default	reduce using rule 104 (parameter_list)



state 247

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 109)

    $default	reduce using rule 109 (identifier_list)



state 248

    postfix_expression  ->  '(' type_name ')' . '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name ')' . '{' initializer_list ',' '}'   (rule 19)
    unary_expression  ->  SIZEOF '(' type_name ')' .   (rule 27)

    '{' 	shift, and go to state 254

    $default	reduce using rule 27 (unary_expression)



state 249

    postfix_expression  ->  '(' type_name ')' . '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name ')' . '{' initializer_list ',' '}'   (rule 19)

    '{' 	shift, and go to state 254



state 250

    designator  ->  '[' constant_expression ']' .   (rule 134)

    $default	reduce using rule 134 (designator)



state 251

    initializer  ->  '{' initializer_list ',' '}' .   (rule 126)

    $default	reduce using rule 126 (initializer)



state 252

    initializer_list  ->  initializer_list ',' initializer .   (rule 129)

    $default	reduce using rule 129 (initializer_list)



state 253

    initializer_list  ->  initializer_list ',' designation . initializer   (rule 130)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 48
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 66
    initializer	go to state 276



state 254

    postfix_expression  ->  '(' type_name ')' '{' . initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name ')' '{' . initializer_list ',' '}'   (rule 19)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '[' 	shift, and go to state 109
    '.' 	shift, and go to state 110
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 48
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 66
    initializer	go to state 111
    initializer_list	go to state 277
    designation	go to state 113
    designator_list	go to state 114
    designator	go to state 115



state 255

    cast_expression  ->  '(' type_name ')' cast_expression .   (rule 35)

    $default	reduce using rule 35 (cast_expression)



state 256

    postfix_expression  ->  postfix_expression '[' expression ']' .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 257

    argument_expression_list  ->  argument_expression_list ',' . assignment_expression   (rule 21)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 278



state 258

    postfix_expression  ->  postfix_expression '(' argument_expression_list ')' .   (rule 13)

    $default	reduce using rule 13 (postfix_expression)



state 259

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 65)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 279



state 260

    labeled_statement  ->  CASE constant_expression ':' statement .   (rule 143)

    $default	reduce using rule 143 (labeled_statement)



state 261

    selection_statement  ->  IF '(' expression ')' . statement   (rule 152)
    selection_statement  ->  IF '(' expression ')' . statement ELSE statement   (rule 153)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    statement	go to state 280
    labeled_statement	go to state 88
    compound_statement	go to state 89
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 262

    selection_statement  ->  SWITCH '(' expression ')' . statement   (rule 154)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    statement	go to state 281
    labeled_statement	go to state 88
    compound_statement	go to state 89
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 263

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 155)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    statement	go to state 282
    labeled_statement	go to state 88
    compound_statement	go to state 89
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 264

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 156)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 283



state 265

    iteration_statement  ->  FOR '(' declaration expression_statement . ')' statement   (rule 159)
    iteration_statement  ->  FOR '(' declaration expression_statement . expression ')' statement   (rule 160)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49
    ')' 	shift, and go to state 284

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 285



state 266

    iteration_statement  ->  FOR '(' expression_statement expression_statement . ')' statement   (rule 157)
    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 158)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '(' 	shift, and go to state 49
    ')' 	shift, and go to state 286

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 287



state 267

    direct_abstract_declarator  ->  '[' '*' ']' .   (rule 118)

    $default	reduce using rule 118 (direct_abstract_declarator)



state 268

    direct_abstract_declarator  ->  '[' assignment_expression ']' .   (rule 115)

    $default	reduce using rule 115 (direct_abstract_declarator)



state 269

    direct_abstract_declarator  ->  '(' parameter_list ')' .   (rule 121)

    $default	reduce using rule 121 (direct_abstract_declarator)



state 270

    direct_abstract_declarator  ->  '(' abstract_declarator ')' .   (rule 113)

    $default	reduce using rule 113 (direct_abstract_declarator)



state 271

    direct_abstract_declarator  ->  direct_abstract_declarator '[' ']' .   (rule 116)

    $default	reduce using rule 116 (direct_abstract_declarator)



state 272

    unary_operator  ->  '*' .   (rule 29)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' '*' . ']'   (rule 119)

    ']' 	shift, and go to state 288

    $default	reduce using rule 29 (unary_operator)



state 273

    direct_abstract_declarator  ->  direct_abstract_declarator '[' assignment_expression . ']'   (rule 117)

    ']' 	shift, and go to state 289



state 274

    direct_abstract_declarator  ->  direct_abstract_declarator '(' ')' .   (rule 122)

    $default	reduce using rule 122 (direct_abstract_declarator)



state 275

    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 104)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_list . ')'   (rule 123)

    ',' 	shift, and go to state 183
    ')' 	shift, and go to state 290



state 276

    initializer_list  ->  initializer_list ',' designation initializer .   (rule 130)

    $default	reduce using rule 130 (initializer_list)



state 277

    postfix_expression  ->  '(' type_name ')' '{' initializer_list . '}'   (rule 18)
    postfix_expression  ->  '(' type_name ')' '{' initializer_list . ',' '}'   (rule 19)
    initializer_list  ->  initializer_list . ',' initializer   (rule 129)
    initializer_list  ->  initializer_list . ',' designation initializer   (rule 130)

    ',' 	shift, and go to state 291
    '}' 	shift, and go to state 292



state 278

    argument_expression_list  ->  argument_expression_list ',' assignment_expression .   (rule 21)

    $default	reduce using rule 21 (argument_expression_list)



state 279

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 65)

    $default	reduce using rule 65 (conditional_expression)



state 280

    selection_statement  ->  IF '(' expression ')' statement .   (rule 152)
    selection_statement  ->  IF '(' expression ')' statement . ELSE statement   (rule 153)

    ELSE	shift, and go to state 293

    $default	reduce using rule 152 (selection_statement)



state 281

    selection_statement  ->  SWITCH '(' expression ')' statement .   (rule 154)

    $default	reduce using rule 154 (selection_statement)



state 282

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 155)

    $default	reduce using rule 155 (iteration_statement)



state 283

    expression  ->  expression . ',' assignment_expression   (rule 80)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 156)

    ',' 	shift, and go to state 175
    ')' 	shift, and go to state 294



state 284

    iteration_statement  ->  FOR '(' declaration expression_statement ')' . statement   (rule 159)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    statement	go to state 295
    labeled_statement	go to state 88
    compound_statement	go to state 89
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 285

    expression  ->  expression . ',' assignment_expression   (rule 80)
    iteration_statement  ->  FOR '(' declaration expression_statement expression . ')' statement   (rule 160)

    ',' 	shift, and go to state 175
    ')' 	shift, and go to state 296



state 286

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' . statement   (rule 157)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    statement	go to state 297
    labeled_statement	go to state 88
    compound_statement	go to state 89
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 287

    expression  ->  expression . ',' assignment_expression   (rule 80)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 158)

    ',' 	shift, and go to state 175
    ')' 	shift, and go to state 298



state 288

    direct_abstract_declarator  ->  direct_abstract_declarator '[' '*' ']' .   (rule 119)

    $default	reduce using rule 119 (direct_abstract_declarator)



state 289

    direct_abstract_declarator  ->  direct_abstract_declarator '[' assignment_expression ']' .   (rule 117)

    $default	reduce using rule 117 (direct_abstract_declarator)



state 290

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_list ')' .   (rule 123)

    $default	reduce using rule 123 (direct_abstract_declarator)



state 291

    postfix_expression  ->  '(' type_name ')' '{' initializer_list ',' . '}'   (rule 19)
    initializer_list  ->  initializer_list ',' . initializer   (rule 129)
    initializer_list  ->  initializer_list ',' . designation initializer   (rule 130)

    IDENTIFIER	shift, and go to state 32
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    '[' 	shift, and go to state 109
    '.' 	shift, and go to state 110
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 48
    '}' 	shift, and go to state 299
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 66
    initializer	go to state 252
    designation	go to state 253
    designator_list	go to state 114
    designator	go to state 115



state 292

    postfix_expression  ->  '(' type_name ')' '{' initializer_list '}' .   (rule 18)

    $default	reduce using rule 18 (postfix_expression)



state 293

    selection_statement  ->  IF '(' expression ')' statement ELSE . statement   (rule 153)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    statement	go to state 300
    labeled_statement	go to state 88
    compound_statement	go to state 89
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 294

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 156)

    ';' 	shift, and go to state 301



state 295

    iteration_statement  ->  FOR '(' declaration expression_statement ')' statement .   (rule 159)

    $default	reduce using rule 159 (iteration_statement)



state 296

    iteration_statement  ->  FOR '(' declaration expression_statement expression ')' . statement   (rule 160)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    statement	go to state 302
    labeled_statement	go to state 88
    compound_statement	go to state 89
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 297

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' statement .   (rule 157)

    $default	reduce using rule 157 (iteration_statement)



state 298

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 158)

    IDENTIFIER	shift, and go to state 71
    CONSTANT	shift, and go to state 33
    STRING_LITERAL	shift, and go to state 34
    SIZEOF	shift, and go to state 35
    CONSTANT_INT	shift, and go to state 36
    CONSTANT_DOUBLE	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CASE	shift, and go to state 72
    IF  	shift, and go to state 73
    SWITCH	shift, and go to state 74
    WHILE	shift, and go to state 75
    DO  	shift, and go to state 76
    FOR 	shift, and go to state 77
    GOTO	shift, and go to state 78
    CONTINUE	shift, and go to state 79
    BREAK	shift, and go to state 80
    RETURN	shift, and go to state 81
    TRUE	shift, and go to state 40
    FALSE	shift, and go to state 41
    ';' 	shift, and go to state 82
    '&' 	shift, and go to state 42
    '!' 	shift, and go to state 43
    '~' 	shift, and go to state 44
    '-' 	shift, and go to state 45
    '+' 	shift, and go to state 46
    '*' 	shift, and go to state 47
    '{' 	shift, and go to state 23
    '(' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    cast_expression	go to state 54
    multiplicative_expression	go to state 55
    additive_expression	go to state 56
    shift_expression	go to state 57
    relational_expression	go to state 58
    equality_expression	go to state 59
    and_expression	go to state 60
    exclusive_or_expression	go to state 61
    inclusive_or_expression	go to state 62
    logical_and_expression	go to state 63
    logical_or_expression	go to state 64
    conditional_expression	go to state 65
    assignment_expression	go to state 84
    expression	go to state 85
    statement	go to state 303
    labeled_statement	go to state 88
    compound_statement	go to state 89
    expression_statement	go to state 92
    selection_statement	go to state 93
    iteration_statement	go to state 94
    jump_statement	go to state 95



state 299

    postfix_expression  ->  '(' type_name ')' '{' initializer_list ',' '}' .   (rule 19)

    $default	reduce using rule 19 (postfix_expression)



state 300

    selection_statement  ->  IF '(' expression ')' statement ELSE statement .   (rule 153)

    $default	reduce using rule 153 (selection_statement)



state 301

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 156)

    $default	reduce using rule 156 (iteration_statement)



state 302

    iteration_statement  ->  FOR '(' declaration expression_statement expression ')' statement .   (rule 160)

    $default	reduce using rule 160 (iteration_statement)



state 303

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 158)

    $default	reduce using rule 158 (iteration_statement)



state 304

    $   	go to state 305



state 305

    $   	go to state 306



state 306

    $default	accept
