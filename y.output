

Terminals which are not used:

   CONST
   ELLIPSIS


Conflict in state 333 between rule 185 and token ELSE resolved as shift.

Grammar
rule 1    Program -> translation_unit
rule 2    primary_expression -> IDENTIFIER
rule 3    primary_expression -> TRUE
rule 4    primary_expression -> FALSE
rule 5    primary_expression -> CONSTANT
rule 6    primary_expression -> CONSTANT_INT
rule 7    primary_expression -> CONSTANT_DOUBLE
rule 8    primary_expression -> STRING_LITERAL
rule 9    primary_expression -> '(' expression ')'
rule 10   postfix_expression -> primary_expression
rule 11   postfix_expression -> postfix_expression '[' expression ']'
rule 12   postfix_expression -> postfix_expression '(' ')'
rule 13   postfix_expression -> postfix_expression '(' argument_expression_list ')'
rule 14   postfix_expression -> postfix_expression '.' IDENTIFIER
rule 15   postfix_expression -> postfix_expression PTR_OP IDENTIFIER
rule 16   postfix_expression -> postfix_expression INC_OP
rule 17   postfix_expression -> postfix_expression DEC_OP
rule 18   postfix_expression -> '(' type_name ')' '{' initializer_list '}'
rule 19   postfix_expression -> '(' type_name ')' '{' initializer_list ',' '}'
rule 20   argument_expression_list -> assignment_expression
rule 21   argument_expression_list -> argument_expression_list ',' assignment_expression
rule 22   unary_expression -> postfix_expression
rule 23   unary_expression -> INC_OP unary_expression
rule 24   unary_expression -> DEC_OP unary_expression
rule 25   unary_expression -> unary_operator cast_expression
rule 26   unary_expression -> SIZEOF unary_expression
rule 27   unary_expression -> SIZEOF '(' type_name ')'
rule 28   unary_operator -> '&'
rule 29   unary_operator -> '*'
rule 30   unary_operator -> '+'
rule 31   unary_operator -> '-'
rule 32   unary_operator -> '~'
rule 33   unary_operator -> '!'
rule 34   cast_expression -> unary_expression
rule 35   cast_expression -> '(' type_name ')' cast_expression
rule 36   multiplicative_expression -> cast_expression
rule 37   multiplicative_expression -> multiplicative_expression '*' cast_expression
rule 38   multiplicative_expression -> multiplicative_expression '/' cast_expression
rule 39   multiplicative_expression -> multiplicative_expression '%' cast_expression
rule 40   additive_expression -> multiplicative_expression
rule 41   additive_expression -> additive_expression '+' multiplicative_expression
rule 42   additive_expression -> additive_expression '-' multiplicative_expression
rule 43   shift_expression -> additive_expression
rule 44   shift_expression -> shift_expression LEFT_OP additive_expression
rule 45   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 46   relational_expression -> shift_expression
rule 47   relational_expression -> relational_expression '<' shift_expression
rule 48   relational_expression -> relational_expression '>' shift_expression
rule 49   relational_expression -> relational_expression LE_OP shift_expression
rule 50   relational_expression -> relational_expression GE_OP shift_expression
rule 51   equality_expression -> relational_expression
rule 52   equality_expression -> equality_expression EQ_OP relational_expression
rule 53   equality_expression -> equality_expression NE_OP relational_expression
rule 54   and_expression -> equality_expression
rule 55   and_expression -> and_expression '&' equality_expression
rule 56   exclusive_or_expression -> and_expression
rule 57   exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 58   inclusive_or_expression -> exclusive_or_expression
rule 59   inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 60   logical_and_expression -> inclusive_or_expression
rule 61   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 62   logical_or_expression -> logical_and_expression
rule 63   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 64   conditional_expression -> logical_or_expression
rule 65   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 66   assignment_expression -> conditional_expression
rule 67   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 68   assignment_operator -> '='
rule 69   assignment_operator -> MUL_ASSIGN
rule 70   assignment_operator -> DIV_ASSIGN
rule 71   assignment_operator -> MOD_ASSIGN
rule 72   assignment_operator -> ADD_ASSIGN
rule 73   assignment_operator -> SUB_ASSIGN
rule 74   assignment_operator -> LEFT_ASSIGN
rule 75   assignment_operator -> RIGHT_ASSIGN
rule 76   assignment_operator -> AND_ASSIGN
rule 77   assignment_operator -> XOR_ASSIGN
rule 78   assignment_operator -> OR_ASSIGN
rule 79   expression -> assignment_expression
rule 80   expression -> expression ',' assignment_expression
rule 81   constant_expression -> conditional_expression
rule 82   declaration -> declaration_specifiers ';'
rule 83   declaration -> declaration_specifiers init_declarator_list ';'
rule 84   declaration_specifiers -> type_specifier
rule 85   declaration_specifiers -> type_specifier declaration_specifiers
rule 86   init_declarator_list -> init_declarator
rule 87   init_declarator_list -> init_declarator_list ',' init_declarator
rule 88   init_declarator -> declarator
rule 89   init_declarator -> declarator '=' initializer
rule 90   type_specifier -> VOID
rule 91   type_specifier -> CHAR
rule 92   type_specifier -> INT
rule 93   type_specifier -> DOUBLE
rule 94   type_specifier -> BOOL
rule 95   type_specifier -> struct_or_union_specifier
rule 96   type_specifier -> enum_specifier
rule 97   type_specifier -> TYPE_NAME
rule 98   struct_or_union_specifier -> struct_or_union IDENTIFIER '{' struct_declaration_list '}'
rule 99   struct_or_union_specifier -> struct_or_union '{' struct_declaration_list '}'
rule 100  struct_or_union_specifier -> struct_or_union IDENTIFIER
rule 101  struct_or_union -> STRUCT
rule 102  struct_or_union -> UNION
rule 103  struct_declaration_list -> struct_declaration
rule 104  struct_declaration_list -> struct_declaration_list struct_declaration
rule 105  struct_declaration -> specifier_qualifier_list struct_declarator_list ';'
rule 106  specifier_qualifier_list -> type_specifier specifier_qualifier_list
rule 107  specifier_qualifier_list -> type_specifier
rule 108  struct_declarator_list -> struct_declarator
rule 109  struct_declarator_list -> struct_declarator_list ',' struct_declarator
rule 110  struct_declarator -> declarator
rule 111  struct_declarator -> ':' constant_expression
rule 112  struct_declarator -> declarator ':' constant_expression
rule 113  enum_specifier -> ENUM '{' enumerator_list '}'
rule 114  enum_specifier -> ENUM IDENTIFIER '{' enumerator_list '}'
rule 115  enum_specifier -> ENUM '{' enumerator_list ',' '}'
rule 116  enum_specifier -> ENUM IDENTIFIER '{' enumerator_list ',' '}'
rule 117  enum_specifier -> ENUM IDENTIFIER
rule 118  enumerator_list -> enumerator
rule 119  enumerator_list -> enumerator_list ',' enumerator
rule 120  enumerator -> IDENTIFIER
rule 121  enumerator -> IDENTIFIER '=' constant_expression
rule 122  declarator -> pointer direct_declarator
rule 123  declarator -> direct_declarator
rule 124  direct_declarator -> IDENTIFIER
rule 125  direct_declarator -> '(' declarator ')'
rule 126  direct_declarator -> direct_declarator '[' assignment_expression ']'
rule 127  direct_declarator -> direct_declarator '[' '*' ']'
rule 128  direct_declarator -> direct_declarator '[' ']'
rule 129  direct_declarator -> direct_declarator '(' parameter_list ')'
rule 130  direct_declarator -> direct_declarator '(' identifier_list ')'
rule 131  direct_declarator -> direct_declarator '(' ')'
rule 132  pointer -> '*'
rule 133  pointer -> '*' pointer
rule 134  parameter_list -> parameter_declaration
rule 135  parameter_list -> parameter_list ',' parameter_declaration
rule 136  parameter_declaration -> declaration_specifiers declarator
rule 137  parameter_declaration -> declaration_specifiers abstract_declarator
rule 138  parameter_declaration -> declaration_specifiers
rule 139  identifier_list -> IDENTIFIER
rule 140  identifier_list -> identifier_list ',' IDENTIFIER
rule 141  type_name -> specifier_qualifier_list
rule 142  type_name -> specifier_qualifier_list abstract_declarator
rule 143  abstract_declarator -> pointer
rule 144  abstract_declarator -> direct_abstract_declarator
rule 145  abstract_declarator -> pointer direct_abstract_declarator
rule 146  direct_abstract_declarator -> '(' abstract_declarator ')'
rule 147  direct_abstract_declarator -> '[' ']'
rule 148  direct_abstract_declarator -> '[' assignment_expression ']'
rule 149  direct_abstract_declarator -> direct_abstract_declarator '[' ']'
rule 150  direct_abstract_declarator -> direct_abstract_declarator '[' assignment_expression ']'
rule 151  direct_abstract_declarator -> '[' '*' ']'
rule 152  direct_abstract_declarator -> direct_abstract_declarator '[' '*' ']'
rule 153  direct_abstract_declarator -> '(' ')'
rule 154  direct_abstract_declarator -> '(' parameter_list ')'
rule 155  direct_abstract_declarator -> direct_abstract_declarator '(' ')'
rule 156  direct_abstract_declarator -> direct_abstract_declarator '(' parameter_list ')'
rule 157  initializer -> assignment_expression
rule 158  initializer -> '{' initializer_list '}'
rule 159  initializer -> '{' initializer_list ',' '}'
rule 160  initializer_list -> initializer
rule 161  initializer_list -> designation initializer
rule 162  initializer_list -> initializer_list ',' initializer
rule 163  initializer_list -> initializer_list ',' designation initializer
rule 164  designation -> designator_list '='
rule 165  designator_list -> designator
rule 166  designator_list -> designator_list designator
rule 167  designator -> '[' constant_expression ']'
rule 168  designator -> '.' IDENTIFIER
rule 169  statement -> labeled_statement
rule 170  statement -> compound_statement
rule 171  statement -> expression_statement
rule 172  statement -> selection_statement
rule 173  statement -> iteration_statement
rule 174  statement -> jump_statement
rule 175  labeled_statement -> IDENTIFIER ':' statement
rule 176  labeled_statement -> CASE constant_expression ':' statement
rule 177  compound_statement -> '{' '}'
rule 178  compound_statement -> '{' block_item_list '}'
rule 179  block_item_list -> block_item
rule 180  block_item_list -> block_item_list block_item
rule 181  block_item -> declaration
rule 182  block_item -> statement
rule 183  expression_statement -> ';'
rule 184  expression_statement -> expression ';'
rule 185  selection_statement -> IF '(' expression ')' statement
rule 186  selection_statement -> IF '(' expression ')' statement ELSE statement
rule 187  selection_statement -> SWITCH '(' expression ')' statement
rule 188  iteration_statement -> WHILE '(' expression ')' statement
rule 189  iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 190  iteration_statement -> FOR '(' expression_statement expression_statement ')' statement
rule 191  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 192  iteration_statement -> FOR '(' declaration expression_statement ')' statement
rule 193  iteration_statement -> FOR '(' declaration expression_statement expression ')' statement
rule 194  jump_statement -> GOTO IDENTIFIER ';'
rule 195  jump_statement -> CONTINUE ';'
rule 196  jump_statement -> BREAK ';'
rule 197  jump_statement -> RETURN ';'
rule 198  jump_statement -> RETURN expression ';'
rule 199  translation_unit -> external_declaration
rule 200  translation_unit -> translation_unit external_declaration
rule 201  external_declaration -> function_definition
rule 202  external_declaration -> declaration
rule 203  function_definition -> declaration_specifiers declarator declaration_list compound_statement
rule 204  function_definition -> declaration_specifiers declarator compound_statement
rule 205  declaration_list -> declaration
rule 206  declaration_list -> declaration_list declaration

Terminals, with rules where they appear

$ (-1)
'!' (33) 33
'%' (37) 39
'&' (38) 28 55
'(' (40) 9 12 13 18 19 27 35 125 129 130 131 146 153 154 155 156 185
    186 187 188 189 190 191 192 193
')' (41) 9 12 13 18 19 27 35 125 129 130 131 146 153 154 155 156 185
    186 187 188 189 190 191 192 193
'*' (42) 29 37 127 132 133 151 152
'+' (43) 30 41
',' (44) 19 21 80 87 109 115 116 119 135 140 159 162 163
'-' (45) 31 42
'.' (46) 14 168
'/' (47) 38
':' (58) 65 111 112 175 176
';' (59) 82 83 105 183 184 189 194 195 196 197 198
'<' (60) 47
'=' (61) 68 89 121 164
'>' (62) 48
'?' (63) 65
'[' (91) 11 126 127 128 147 148 149 150 151 152 167
']' (93) 11 126 127 128 147 148 149 150 151 152 167
'^' (94) 57
'{' (123) 18 19 98 99 113 114 115 116 158 159 177 178
'|' (124) 59
'}' (125) 18 19 98 99 113 114 115 116 158 159 177 178
'~' (126) 32
error (256)
IDENTIFIER (257) 2 14 15 98 100 114 116 117 120 121 124 139 140 168
    175 194
CONSTANT (258) 5
STRING_LITERAL (259) 8
SIZEOF (260) 26 27
CONSTANT_INT (261) 6
CONSTANT_DOUBLE (262) 7
PTR_OP (263) 15
INC_OP (264) 16 23
DEC_OP (265) 17 24
LEFT_OP (266) 44
RIGHT_OP (267) 45
LE_OP (268) 49
GE_OP (269) 50
EQ_OP (270) 52
NE_OP (271) 53
AND_OP (272) 61
OR_OP (273) 63
MUL_ASSIGN (274) 69
DIV_ASSIGN (275) 70
MOD_ASSIGN (276) 71
ADD_ASSIGN (277) 72
SUB_ASSIGN (278) 73
LEFT_ASSIGN (279) 74
RIGHT_ASSIGN (280) 75
AND_ASSIGN (281) 76
XOR_ASSIGN (282) 77
OR_ASSIGN (283) 78
TYPE_NAME (284) 97
CHAR (285) 91
INT (286) 92
DOUBLE (287) 93
CONST (288)
VOID (289) 90
BOOL (290) 94
STRUCT (291) 101
UNION (292) 102
ENUM (293) 113 114 115 116 117
ELLIPSIS (294)
CASE (295) 176
IF (296) 185 186
ELSE (297) 186
SWITCH (298) 187
WHILE (299) 188 189
DO (300) 189
FOR (301) 190 191 192 193
GOTO (302) 194
CONTINUE (303) 195
BREAK (304) 196
RETURN (305) 197 198
TRUE (306) 3
FALSE (307) 4
LOWER_THAN_ELSE (308)

Nonterminals, with rules where they appear

Program (79)
    on left: 1
primary_expression (80)
    on left: 2 3 4 5 6 7 8 9, on right: 10
postfix_expression (81)
    on left: 10 11 12 13 14 15 16 17 18 19, on right: 11 12 13 14 15
    16 17 22
argument_expression_list (82)
    on left: 20 21, on right: 13 21
unary_expression (83)
    on left: 22 23 24 25 26 27, on right: 23 24 26 34 67
unary_operator (84)
    on left: 28 29 30 31 32 33, on right: 25
cast_expression (85)
    on left: 34 35, on right: 25 35 36 37 38 39
multiplicative_expression (86)
    on left: 36 37 38 39, on right: 37 38 39 40 41 42
additive_expression (87)
    on left: 40 41 42, on right: 41 42 43 44 45
shift_expression (88)
    on left: 43 44 45, on right: 44 45 46 47 48 49 50
relational_expression (89)
    on left: 46 47 48 49 50, on right: 47 48 49 50 51 52 53
equality_expression (90)
    on left: 51 52 53, on right: 52 53 54 55
and_expression (91)
    on left: 54 55, on right: 55 56 57
exclusive_or_expression (92)
    on left: 56 57, on right: 57 58 59
inclusive_or_expression (93)
    on left: 58 59, on right: 59 60 61
logical_and_expression (94)
    on left: 60 61, on right: 61 62 63
logical_or_expression (95)
    on left: 62 63, on right: 63 64 65
conditional_expression (96)
    on left: 64 65, on right: 65 66 81
assignment_expression (97)
    on left: 66 67, on right: 20 21 67 79 80 126 148 150 157
assignment_operator (98)
    on left: 68 69 70 71 72 73 74 75 76 77 78, on right: 67
expression (99)
    on left: 79 80, on right: 9 11 65 80 184 185 186 187 188 189 191
    193 198
constant_expression (100)
    on left: 81, on right: 111 112 121 167 176
declaration (101)
    on left: 82 83, on right: 181 192 193 202 205 206
declaration_specifiers (102)
    on left: 84 85, on right: 82 83 85 136 137 138 203 204
init_declarator_list (103)
    on left: 86 87, on right: 83 87
init_declarator (104)
    on left: 88 89, on right: 86 87
type_specifier (105)
    on left: 90 91 92 93 94 95 96 97, on right: 84 85 106 107
struct_or_union_specifier (106)
    on left: 98 99 100, on right: 95
struct_or_union (107)
    on left: 101 102, on right: 98 99 100
struct_declaration_list (108)
    on left: 103 104, on right: 98 99 104
struct_declaration (109)
    on left: 105, on right: 103 104
specifier_qualifier_list (110)
    on left: 106 107, on right: 105 106 141 142
struct_declarator_list (111)
    on left: 108 109, on right: 105 109
struct_declarator (112)
    on left: 110 111 112, on right: 108 109
enum_specifier (113)
    on left: 113 114 115 116 117, on right: 96
enumerator_list (114)
    on left: 118 119, on right: 113 114 115 116 119
enumerator (115)
    on left: 120 121, on right: 118 119
declarator (116)
    on left: 122 123, on right: 88 89 110 112 125 136 203 204
direct_declarator (117)
    on left: 124 125 126 127 128 129 130 131, on right: 122 123 126
    127 128 129 130 131
pointer (118)
    on left: 132 133, on right: 122 133 143 145
parameter_list (119)
    on left: 134 135, on right: 129 135 154 156
parameter_declaration (120)
    on left: 136 137 138, on right: 134 135
identifier_list (121)
    on left: 139 140, on right: 130 140
type_name (122)
    on left: 141 142, on right: 18 19 27 35
abstract_declarator (123)
    on left: 143 144 145, on right: 137 142 146
direct_abstract_declarator (124)
    on left: 146 147 148 149 150 151 152 153 154 155 156,
    on right: 144 145 149 150 152 155 156
initializer (125)
    on left: 157 158 159, on right: 89 160 161 162 163
initializer_list (126)
    on left: 160 161 162 163, on right: 18 19 158 159 162 163
designation (127)
    on left: 164, on right: 161 163
designator_list (128)
    on left: 165 166, on right: 164 166
designator (129)
    on left: 167 168, on right: 165 166
statement (130)
    on left: 169 170 171 172 173 174, on right: 175 176 182 185 186
    187 188 189 190 191 192 193
labeled_statement (131)
    on left: 175 176, on right: 169
compound_statement (132)
    on left: 177 178, on right: 170 203 204
block_item_list (133)
    on left: 179 180, on right: 178 180
block_item (134)
    on left: 181 182, on right: 179 180
expression_statement (135)
    on left: 183 184, on right: 171 190 191 192 193
selection_statement (136)
    on left: 185 186 187, on right: 172
iteration_statement (137)
    on left: 188 189 190 191 192 193, on right: 173
jump_statement (138)
    on left: 194 195 196 197 198, on right: 174
translation_unit (139)
    on left: 199 200, on right: 1 200
external_declaration (140)
    on left: 201 202, on right: 199 200
function_definition (141)
    on left: 203 204, on right: 201
declaration_list (142)
    on left: 205 206, on right: 203 206


state 0

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9

    Program	go to state 357
    declaration	go to state 10
    declaration_specifiers	go to state 11
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    translation_unit	go to state 16
    external_declaration	go to state 17
    function_definition	go to state 18



state 1

    type_specifier  ->  TYPE_NAME .   (rule 97)

    $default	reduce using rule 97 (type_specifier)



state 2

    type_specifier  ->  CHAR .   (rule 91)

    $default	reduce using rule 91 (type_specifier)



state 3

    type_specifier  ->  INT .   (rule 92)

    $default	reduce using rule 92 (type_specifier)



state 4

    type_specifier  ->  DOUBLE .   (rule 93)

    $default	reduce using rule 93 (type_specifier)



state 5

    type_specifier  ->  VOID .   (rule 90)

    $default	reduce using rule 90 (type_specifier)



state 6

    type_specifier  ->  BOOL .   (rule 94)

    $default	reduce using rule 94 (type_specifier)



state 7

    struct_or_union  ->  STRUCT .   (rule 101)

    $default	reduce using rule 101 (struct_or_union)



state 8

    struct_or_union  ->  UNION .   (rule 102)

    $default	reduce using rule 102 (struct_or_union)



state 9

    enum_specifier  ->  ENUM . '{' enumerator_list '}'   (rule 113)
    enum_specifier  ->  ENUM . IDENTIFIER '{' enumerator_list '}'   (rule 114)
    enum_specifier  ->  ENUM . '{' enumerator_list ',' '}'   (rule 115)
    enum_specifier  ->  ENUM . IDENTIFIER '{' enumerator_list ',' '}'   (rule 116)
    enum_specifier  ->  ENUM . IDENTIFIER   (rule 117)

    IDENTIFIER	shift, and go to state 19
    '{' 	shift, and go to state 20



state 10

    external_declaration  ->  declaration .   (rule 202)

    $default	reduce using rule 202 (external_declaration)



state 11

    declaration  ->  declaration_specifiers . ';'   (rule 82)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 83)
    function_definition  ->  declaration_specifiers . declarator declaration_list compound_statement   (rule 203)
    function_definition  ->  declaration_specifiers . declarator compound_statement   (rule 204)

    IDENTIFIER	shift, and go to state 21
    ';' 	shift, and go to state 22
    '*' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    init_declarator_list	go to state 25
    init_declarator	go to state 26
    declarator	go to state 27
    direct_declarator	go to state 28
    pointer	go to state 29



state 12

    declaration_specifiers  ->  type_specifier .   (rule 84)
    declaration_specifiers  ->  type_specifier . declaration_specifiers   (rule 85)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9

    $default	reduce using rule 84 (declaration_specifiers)

    declaration_specifiers	go to state 30
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15



state 13

    type_specifier  ->  struct_or_union_specifier .   (rule 95)

    $default	reduce using rule 95 (type_specifier)



state 14

    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER '{' struct_declaration_list '}'   (rule 98)
    struct_or_union_specifier  ->  struct_or_union . '{' struct_declaration_list '}'   (rule 99)
    struct_or_union_specifier  ->  struct_or_union . IDENTIFIER   (rule 100)

    IDENTIFIER	shift, and go to state 31
    '{' 	shift, and go to state 32



state 15

    type_specifier  ->  enum_specifier .   (rule 96)

    $default	reduce using rule 96 (type_specifier)



state 16

    Program  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_declaration   (rule 200)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9

    $default	reduce using rule 1 (Program)

    declaration	go to state 10
    declaration_specifiers	go to state 11
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    external_declaration	go to state 33
    function_definition	go to state 18



state 17

    translation_unit  ->  external_declaration .   (rule 199)

    $default	reduce using rule 199 (translation_unit)



state 18

    external_declaration  ->  function_definition .   (rule 201)

    $default	reduce using rule 201 (external_declaration)



state 19

    enum_specifier  ->  ENUM IDENTIFIER . '{' enumerator_list '}'   (rule 114)
    enum_specifier  ->  ENUM IDENTIFIER . '{' enumerator_list ',' '}'   (rule 116)
    enum_specifier  ->  ENUM IDENTIFIER .   (rule 117)

    '{' 	shift, and go to state 34

    $default	reduce using rule 117 (enum_specifier)



state 20

    enum_specifier  ->  ENUM '{' . enumerator_list '}'   (rule 113)
    enum_specifier  ->  ENUM '{' . enumerator_list ',' '}'   (rule 115)

    IDENTIFIER	shift, and go to state 35

    enumerator_list	go to state 36
    enumerator	go to state 37



state 21

    direct_declarator  ->  IDENTIFIER .   (rule 124)

    $default	reduce using rule 124 (direct_declarator)



state 22

    declaration  ->  declaration_specifiers ';' .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 23

    pointer  ->  '*' .   (rule 132)
    pointer  ->  '*' . pointer   (rule 133)

    '*' 	shift, and go to state 23

    $default	reduce using rule 132 (pointer)

    pointer	go to state 38



state 24

    direct_declarator  ->  '(' . declarator ')'   (rule 125)

    IDENTIFIER	shift, and go to state 21
    '*' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    declarator	go to state 39
    direct_declarator	go to state 28
    pointer	go to state 29



state 25

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 83)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 87)

    ';' 	shift, and go to state 40
    ',' 	shift, and go to state 41



state 26

    init_declarator_list  ->  init_declarator .   (rule 86)

    $default	reduce using rule 86 (init_declarator_list)



state 27

    init_declarator  ->  declarator .   (rule 88)
    init_declarator  ->  declarator . '=' initializer   (rule 89)
    function_definition  ->  declaration_specifiers declarator . declaration_list compound_statement   (rule 203)
    function_definition  ->  declaration_specifiers declarator . compound_statement   (rule 204)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    '=' 	shift, and go to state 42
    '{' 	shift, and go to state 43

    $default	reduce using rule 88 (init_declarator)

    declaration	go to state 44
    declaration_specifiers	go to state 45
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    compound_statement	go to state 46
    declaration_list	go to state 47



state 28

    declarator  ->  direct_declarator .   (rule 123)
    direct_declarator  ->  direct_declarator . '[' assignment_expression ']'   (rule 126)
    direct_declarator  ->  direct_declarator . '[' '*' ']'   (rule 127)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 128)
    direct_declarator  ->  direct_declarator . '(' parameter_list ')'   (rule 129)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 130)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 131)

    '[' 	shift, and go to state 48
    '(' 	shift, and go to state 49

    $default	reduce using rule 123 (declarator)



state 29

    declarator  ->  pointer . direct_declarator   (rule 122)

    IDENTIFIER	shift, and go to state 21
    '(' 	shift, and go to state 24

    direct_declarator	go to state 50



state 30

    declaration_specifiers  ->  type_specifier declaration_specifiers .   (rule 85)

    $default	reduce using rule 85 (declaration_specifiers)



state 31

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER . '{' struct_declaration_list '}'   (rule 98)
    struct_or_union_specifier  ->  struct_or_union IDENTIFIER .   (rule 100)

    '{' 	shift, and go to state 51

    $default	reduce using rule 100 (struct_or_union_specifier)



state 32

    struct_or_union_specifier  ->  struct_or_union '{' . struct_declaration_list '}'   (rule 99)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9

    type_specifier	go to state 52
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    struct_declaration_list	go to state 53
    struct_declaration	go to state 54
    specifier_qualifier_list	go to state 55
    enum_specifier	go to state 15



state 33

    translation_unit  ->  translation_unit external_declaration .   (rule 200)

    $default	reduce using rule 200 (translation_unit)



state 34

    enum_specifier  ->  ENUM IDENTIFIER '{' . enumerator_list '}'   (rule 114)
    enum_specifier  ->  ENUM IDENTIFIER '{' . enumerator_list ',' '}'   (rule 116)

    IDENTIFIER	shift, and go to state 35

    enumerator_list	go to state 56
    enumerator	go to state 37



state 35

    enumerator  ->  IDENTIFIER .   (rule 120)
    enumerator  ->  IDENTIFIER . '=' constant_expression   (rule 121)

    '=' 	shift, and go to state 57

    $default	reduce using rule 120 (enumerator)



state 36

    enum_specifier  ->  ENUM '{' enumerator_list . '}'   (rule 113)
    enum_specifier  ->  ENUM '{' enumerator_list . ',' '}'   (rule 115)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 119)

    ',' 	shift, and go to state 58
    '}' 	shift, and go to state 59



state 37

    enumerator_list  ->  enumerator .   (rule 118)

    $default	reduce using rule 118 (enumerator_list)



state 38

    pointer  ->  '*' pointer .   (rule 133)

    $default	reduce using rule 133 (pointer)



state 39

    direct_declarator  ->  '(' declarator . ')'   (rule 125)

    ')' 	shift, and go to state 60



state 40

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 41

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 87)

    IDENTIFIER	shift, and go to state 21
    '*' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    init_declarator	go to state 61
    declarator	go to state 62
    direct_declarator	go to state 28
    pointer	go to state 29



state 42

    init_declarator  ->  declarator '=' . initializer   (rule 89)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 79
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 97
    initializer	go to state 98



state 43

    compound_statement  ->  '{' . '}'   (rule 177)
    compound_statement  ->  '{' . block_item_list '}'   (rule 178)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '}' 	shift, and go to state 111
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    declaration	go to state 114
    declaration_specifiers	go to state 45
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    statement	go to state 115
    labeled_statement	go to state 116
    compound_statement	go to state 117
    block_item_list	go to state 118
    block_item	go to state 119
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 44

    declaration_list  ->  declaration .   (rule 205)

    $default	reduce using rule 205 (declaration_list)



state 45

    declaration  ->  declaration_specifiers . ';'   (rule 82)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 83)

    IDENTIFIER	shift, and go to state 21
    ';' 	shift, and go to state 22
    '*' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    init_declarator_list	go to state 25
    init_declarator	go to state 26
    declarator	go to state 62
    direct_declarator	go to state 28
    pointer	go to state 29



state 46

    function_definition  ->  declaration_specifiers declarator compound_statement .   (rule 204)

    $default	reduce using rule 204 (function_definition)



state 47

    function_definition  ->  declaration_specifiers declarator declaration_list . compound_statement   (rule 203)
    declaration_list  ->  declaration_list . declaration   (rule 206)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    '{' 	shift, and go to state 43

    declaration	go to state 124
    declaration_specifiers	go to state 45
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    compound_statement	go to state 125



state 48

    direct_declarator  ->  direct_declarator '[' . assignment_expression ']'   (rule 126)
    direct_declarator  ->  direct_declarator '[' . '*' ']'   (rule 127)
    direct_declarator  ->  direct_declarator '[' . ']'   (rule 128)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ']' 	shift, and go to state 126
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 127
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 128



state 49

    direct_declarator  ->  direct_declarator '(' . parameter_list ')'   (rule 129)
    direct_declarator  ->  direct_declarator '(' . identifier_list ')'   (rule 130)
    direct_declarator  ->  direct_declarator '(' . ')'   (rule 131)

    IDENTIFIER	shift, and go to state 129
    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    ')' 	shift, and go to state 130

    declaration_specifiers	go to state 131
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    parameter_list	go to state 132
    parameter_declaration	go to state 133
    identifier_list	go to state 134



state 50

    declarator  ->  pointer direct_declarator .   (rule 122)
    direct_declarator  ->  direct_declarator . '[' assignment_expression ']'   (rule 126)
    direct_declarator  ->  direct_declarator . '[' '*' ']'   (rule 127)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 128)
    direct_declarator  ->  direct_declarator . '(' parameter_list ')'   (rule 129)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 130)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 131)

    '[' 	shift, and go to state 48
    '(' 	shift, and go to state 49

    $default	reduce using rule 122 (declarator)



state 51

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' . struct_declaration_list '}'   (rule 98)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9

    type_specifier	go to state 52
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    struct_declaration_list	go to state 135
    struct_declaration	go to state 54
    specifier_qualifier_list	go to state 55
    enum_specifier	go to state 15



state 52

    specifier_qualifier_list  ->  type_specifier . specifier_qualifier_list   (rule 106)
    specifier_qualifier_list  ->  type_specifier .   (rule 107)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9

    $default	reduce using rule 107 (specifier_qualifier_list)

    type_specifier	go to state 52
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    specifier_qualifier_list	go to state 136
    enum_specifier	go to state 15



state 53

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list . '}'   (rule 99)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 104)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    '}' 	shift, and go to state 137

    type_specifier	go to state 52
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    struct_declaration	go to state 138
    specifier_qualifier_list	go to state 55
    enum_specifier	go to state 15



state 54

    struct_declaration_list  ->  struct_declaration .   (rule 103)

    $default	reduce using rule 103 (struct_declaration_list)



state 55

    struct_declaration  ->  specifier_qualifier_list . struct_declarator_list ';'   (rule 105)

    IDENTIFIER	shift, and go to state 21
    ':' 	shift, and go to state 139
    '*' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    struct_declarator_list	go to state 140
    struct_declarator	go to state 141
    declarator	go to state 142
    direct_declarator	go to state 28
    pointer	go to state 29



state 56

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list . '}'   (rule 114)
    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list . ',' '}'   (rule 116)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 119)

    ',' 	shift, and go to state 143
    '}' 	shift, and go to state 144



state 57

    enumerator  ->  IDENTIFIER '=' . constant_expression   (rule 121)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 146
    constant_expression	go to state 147



state 58

    enum_specifier  ->  ENUM '{' enumerator_list ',' . '}'   (rule 115)
    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 119)

    IDENTIFIER	shift, and go to state 35
    '}' 	shift, and go to state 148

    enumerator	go to state 149



state 59

    enum_specifier  ->  ENUM '{' enumerator_list '}' .   (rule 113)

    $default	reduce using rule 113 (enum_specifier)



state 60

    direct_declarator  ->  '(' declarator ')' .   (rule 125)

    $default	reduce using rule 125 (direct_declarator)



state 61

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 87)

    $default	reduce using rule 87 (init_declarator_list)



state 62

    init_declarator  ->  declarator .   (rule 88)
    init_declarator  ->  declarator . '=' initializer   (rule 89)

    '=' 	shift, and go to state 42

    $default	reduce using rule 88 (init_declarator)



state 63

    primary_expression  ->  IDENTIFIER .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 64

    primary_expression  ->  CONSTANT .   (rule 5)

    $default	reduce using rule 5 (primary_expression)



state 65

    primary_expression  ->  STRING_LITERAL .   (rule 8)

    $default	reduce using rule 8 (primary_expression)



state 66

    unary_expression  ->  SIZEOF . unary_expression   (rule 26)
    unary_expression  ->  SIZEOF . '(' type_name ')'   (rule 27)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 150

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 151
    unary_operator	go to state 84



state 67

    primary_expression  ->  CONSTANT_INT .   (rule 6)

    $default	reduce using rule 6 (primary_expression)



state 68

    primary_expression  ->  CONSTANT_DOUBLE .   (rule 7)

    $default	reduce using rule 7 (primary_expression)



state 69

    unary_expression  ->  INC_OP . unary_expression   (rule 23)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 152

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 153
    unary_operator	go to state 84



state 70

    unary_expression  ->  DEC_OP . unary_expression   (rule 24)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 152

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 154
    unary_operator	go to state 84



state 71

    primary_expression  ->  TRUE .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 72

    primary_expression  ->  FALSE .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 73

    unary_operator  ->  '&' .   (rule 28)

    $default	reduce using rule 28 (unary_operator)



state 74

    unary_operator  ->  '!' .   (rule 33)

    $default	reduce using rule 33 (unary_operator)



state 75

    unary_operator  ->  '~' .   (rule 32)

    $default	reduce using rule 32 (unary_operator)



state 76

    unary_operator  ->  '-' .   (rule 31)

    $default	reduce using rule 31 (unary_operator)



state 77

    unary_operator  ->  '+' .   (rule 30)

    $default	reduce using rule 30 (unary_operator)



state 78

    unary_operator  ->  '*' .   (rule 29)

    $default	reduce using rule 29 (unary_operator)



state 79

    initializer  ->  '{' . initializer_list '}'   (rule 158)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 159)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '[' 	shift, and go to state 155
    '.' 	shift, and go to state 156
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 79
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 97
    initializer	go to state 157
    initializer_list	go to state 158
    designation	go to state 159
    designator_list	go to state 160
    designator	go to state 161



state 80

    primary_expression  ->  '(' . expression ')'   (rule 9)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list ',' '}'   (rule 19)
    cast_expression  ->  '(' . type_name ')' cast_expression   (rule 35)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 162
    type_specifier	go to state 52
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    specifier_qualifier_list	go to state 163
    enum_specifier	go to state 15
    type_name	go to state 164



state 81

    postfix_expression  ->  primary_expression .   (rule 10)

    $default	reduce using rule 10 (postfix_expression)



state 82

    postfix_expression  ->  postfix_expression . '[' expression ']'   (rule 11)
    postfix_expression  ->  postfix_expression . '(' ')'   (rule 12)
    postfix_expression  ->  postfix_expression . '(' argument_expression_list ')'   (rule 13)
    postfix_expression  ->  postfix_expression . '.' IDENTIFIER   (rule 14)
    postfix_expression  ->  postfix_expression . PTR_OP IDENTIFIER   (rule 15)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 16)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 17)
    unary_expression  ->  postfix_expression .   (rule 22)

    PTR_OP	shift, and go to state 165
    INC_OP	shift, and go to state 166
    DEC_OP	shift, and go to state 167
    '[' 	shift, and go to state 168
    '.' 	shift, and go to state 169
    '(' 	shift, and go to state 170

    $default	reduce using rule 22 (unary_expression)



state 83

    cast_expression  ->  unary_expression .   (rule 34)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 67)

    MUL_ASSIGN	shift, and go to state 171
    DIV_ASSIGN	shift, and go to state 172
    MOD_ASSIGN	shift, and go to state 173
    ADD_ASSIGN	shift, and go to state 174
    SUB_ASSIGN	shift, and go to state 175
    LEFT_ASSIGN	shift, and go to state 176
    RIGHT_ASSIGN	shift, and go to state 177
    AND_ASSIGN	shift, and go to state 178
    XOR_ASSIGN	shift, and go to state 179
    OR_ASSIGN	shift, and go to state 180
    '=' 	shift, and go to state 181

    $default	reduce using rule 34 (cast_expression)

    assignment_operator	go to state 182



state 84

    unary_expression  ->  unary_operator . cast_expression   (rule 25)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 183



state 85

    multiplicative_expression  ->  cast_expression .   (rule 36)

    $default	reduce using rule 36 (multiplicative_expression)



state 86

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 39)
    additive_expression  ->  multiplicative_expression .   (rule 40)

    '*' 	shift, and go to state 184
    '/' 	shift, and go to state 185
    '%' 	shift, and go to state 186

    $default	reduce using rule 40 (additive_expression)



state 87

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 42)
    shift_expression  ->  additive_expression .   (rule 43)

    '-' 	shift, and go to state 187
    '+' 	shift, and go to state 188

    $default	reduce using rule 43 (shift_expression)



state 88

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  shift_expression .   (rule 46)

    LEFT_OP	shift, and go to state 189
    RIGHT_OP	shift, and go to state 190

    $default	reduce using rule 46 (relational_expression)



state 89

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 47)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  relational_expression .   (rule 51)

    LE_OP	shift, and go to state 191
    GE_OP	shift, and go to state 192
    '<' 	shift, and go to state 193
    '>' 	shift, and go to state 194

    $default	reduce using rule 51 (equality_expression)



state 90

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 52)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 53)
    and_expression  ->  equality_expression .   (rule 54)

    EQ_OP	shift, and go to state 195
    NE_OP	shift, and go to state 196

    $default	reduce using rule 54 (and_expression)



state 91

    and_expression  ->  and_expression . '&' equality_expression   (rule 55)
    exclusive_or_expression  ->  and_expression .   (rule 56)

    '&' 	shift, and go to state 197

    $default	reduce using rule 56 (exclusive_or_expression)



state 92

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 57)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 58)

    '^' 	shift, and go to state 198

    $default	reduce using rule 58 (inclusive_or_expression)



state 93

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 59)
    logical_and_expression  ->  inclusive_or_expression .   (rule 60)

    '|' 	shift, and go to state 199

    $default	reduce using rule 60 (logical_and_expression)



state 94

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 61)
    logical_or_expression  ->  logical_and_expression .   (rule 62)

    AND_OP	shift, and go to state 200

    $default	reduce using rule 62 (logical_or_expression)



state 95

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 63)
    conditional_expression  ->  logical_or_expression .   (rule 64)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 65)

    OR_OP	shift, and go to state 201
    '?' 	shift, and go to state 202

    $default	reduce using rule 64 (conditional_expression)



state 96

    assignment_expression  ->  conditional_expression .   (rule 66)

    $default	reduce using rule 66 (assignment_expression)



state 97

    initializer  ->  assignment_expression .   (rule 157)

    $default	reduce using rule 157 (initializer)



state 98

    init_declarator  ->  declarator '=' initializer .   (rule 89)

    $default	reduce using rule 89 (init_declarator)



state 99

    primary_expression  ->  IDENTIFIER .   (rule 2)
    labeled_statement  ->  IDENTIFIER . ':' statement   (rule 175)

    ':' 	shift, and go to state 203

    $default	reduce using rule 2 (primary_expression)



state 100

    labeled_statement  ->  CASE . constant_expression ':' statement   (rule 176)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 146
    constant_expression	go to state 204



state 101

    selection_statement  ->  IF . '(' expression ')' statement   (rule 185)
    selection_statement  ->  IF . '(' expression ')' statement ELSE statement   (rule 186)

    '(' 	shift, and go to state 205



state 102

    selection_statement  ->  SWITCH . '(' expression ')' statement   (rule 187)

    '(' 	shift, and go to state 206



state 103

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 188)

    '(' 	shift, and go to state 207



state 104

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 189)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    statement	go to state 208
    labeled_statement	go to state 116
    compound_statement	go to state 117
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 105

    iteration_statement  ->  FOR . '(' expression_statement expression_statement ')' statement   (rule 190)
    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 191)
    iteration_statement  ->  FOR . '(' declaration expression_statement ')' statement   (rule 192)
    iteration_statement  ->  FOR . '(' declaration expression_statement expression ')' statement   (rule 193)

    '(' 	shift, and go to state 209



state 106

    jump_statement  ->  GOTO . IDENTIFIER ';'   (rule 194)

    IDENTIFIER	shift, and go to state 210



state 107

    jump_statement  ->  CONTINUE . ';'   (rule 195)

    ';' 	shift, and go to state 211



state 108

    jump_statement  ->  BREAK . ';'   (rule 196)

    ';' 	shift, and go to state 212



state 109

    jump_statement  ->  RETURN . ';'   (rule 197)
    jump_statement  ->  RETURN . expression ';'   (rule 198)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 213
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 214



state 110

    expression_statement  ->  ';' .   (rule 183)

    $default	reduce using rule 183 (expression_statement)



state 111

    compound_statement  ->  '{' '}' .   (rule 177)

    $default	reduce using rule 177 (compound_statement)



state 112

    expression  ->  assignment_expression .   (rule 79)

    $default	reduce using rule 79 (expression)



state 113

    expression  ->  expression . ',' assignment_expression   (rule 80)
    expression_statement  ->  expression . ';'   (rule 184)

    ';' 	shift, and go to state 215
    ',' 	shift, and go to state 216



state 114

    block_item  ->  declaration .   (rule 181)

    $default	reduce using rule 181 (block_item)



state 115

    block_item  ->  statement .   (rule 182)

    $default	reduce using rule 182 (block_item)



state 116

    statement  ->  labeled_statement .   (rule 169)

    $default	reduce using rule 169 (statement)



state 117

    statement  ->  compound_statement .   (rule 170)

    $default	reduce using rule 170 (statement)



state 118

    compound_statement  ->  '{' block_item_list . '}'   (rule 178)
    block_item_list  ->  block_item_list . block_item   (rule 180)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '}' 	shift, and go to state 217
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    declaration	go to state 114
    declaration_specifiers	go to state 45
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    statement	go to state 115
    labeled_statement	go to state 116
    compound_statement	go to state 117
    block_item	go to state 218
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 119

    block_item_list  ->  block_item .   (rule 179)

    $default	reduce using rule 179 (block_item_list)



state 120

    statement  ->  expression_statement .   (rule 171)

    $default	reduce using rule 171 (statement)



state 121

    statement  ->  selection_statement .   (rule 172)

    $default	reduce using rule 172 (statement)



state 122

    statement  ->  iteration_statement .   (rule 173)

    $default	reduce using rule 173 (statement)



state 123

    statement  ->  jump_statement .   (rule 174)

    $default	reduce using rule 174 (statement)



state 124

    declaration_list  ->  declaration_list declaration .   (rule 206)

    $default	reduce using rule 206 (declaration_list)



state 125

    function_definition  ->  declaration_specifiers declarator declaration_list compound_statement .   (rule 203)

    $default	reduce using rule 203 (function_definition)



state 126

    direct_declarator  ->  direct_declarator '[' ']' .   (rule 128)

    $default	reduce using rule 128 (direct_declarator)



state 127

    unary_operator  ->  '*' .   (rule 29)
    direct_declarator  ->  direct_declarator '[' '*' . ']'   (rule 127)

    ']' 	shift, and go to state 219

    $default	reduce using rule 29 (unary_operator)



state 128

    direct_declarator  ->  direct_declarator '[' assignment_expression . ']'   (rule 126)

    ']' 	shift, and go to state 220



state 129

    identifier_list  ->  IDENTIFIER .   (rule 139)

    $default	reduce using rule 139 (identifier_list)



state 130

    direct_declarator  ->  direct_declarator '(' ')' .   (rule 131)

    $default	reduce using rule 131 (direct_declarator)



state 131

    parameter_declaration  ->  declaration_specifiers . declarator   (rule 136)
    parameter_declaration  ->  declaration_specifiers . abstract_declarator   (rule 137)
    parameter_declaration  ->  declaration_specifiers .   (rule 138)

    IDENTIFIER	shift, and go to state 21
    '[' 	shift, and go to state 221
    '*' 	shift, and go to state 23
    '(' 	shift, and go to state 222

    $default	reduce using rule 138 (parameter_declaration)

    declarator	go to state 223
    direct_declarator	go to state 28
    pointer	go to state 224
    abstract_declarator	go to state 225
    direct_abstract_declarator	go to state 226



state 132

    direct_declarator  ->  direct_declarator '(' parameter_list . ')'   (rule 129)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 135)

    ',' 	shift, and go to state 227
    ')' 	shift, and go to state 228



state 133

    parameter_list  ->  parameter_declaration .   (rule 134)

    $default	reduce using rule 134 (parameter_list)



state 134

    direct_declarator  ->  direct_declarator '(' identifier_list . ')'   (rule 130)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 140)

    ',' 	shift, and go to state 229
    ')' 	shift, and go to state 230



state 135

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list . '}'   (rule 98)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 104)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    '}' 	shift, and go to state 231

    type_specifier	go to state 52
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    struct_declaration	go to state 138
    specifier_qualifier_list	go to state 55
    enum_specifier	go to state 15



state 136

    specifier_qualifier_list  ->  type_specifier specifier_qualifier_list .   (rule 106)

    $default	reduce using rule 106 (specifier_qualifier_list)



state 137

    struct_or_union_specifier  ->  struct_or_union '{' struct_declaration_list '}' .   (rule 99)

    $default	reduce using rule 99 (struct_or_union_specifier)



state 138

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 104)

    $default	reduce using rule 104 (struct_declaration_list)



state 139

    struct_declarator  ->  ':' . constant_expression   (rule 111)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 146
    constant_expression	go to state 232



state 140

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list . ';'   (rule 105)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 109)

    ';' 	shift, and go to state 233
    ',' 	shift, and go to state 234



state 141

    struct_declarator_list  ->  struct_declarator .   (rule 108)

    $default	reduce using rule 108 (struct_declarator_list)



state 142

    struct_declarator  ->  declarator .   (rule 110)
    struct_declarator  ->  declarator . ':' constant_expression   (rule 112)

    ':' 	shift, and go to state 235

    $default	reduce using rule 110 (struct_declarator)



state 143

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list ',' . '}'   (rule 116)
    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 119)

    IDENTIFIER	shift, and go to state 35
    '}' 	shift, and go to state 236

    enumerator	go to state 149



state 144

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list '}' .   (rule 114)

    $default	reduce using rule 114 (enum_specifier)



state 145

    cast_expression  ->  unary_expression .   (rule 34)

    $default	reduce using rule 34 (cast_expression)



state 146

    constant_expression  ->  conditional_expression .   (rule 81)

    $default	reduce using rule 81 (constant_expression)



state 147

    enumerator  ->  IDENTIFIER '=' constant_expression .   (rule 121)

    $default	reduce using rule 121 (enumerator)



state 148

    enum_specifier  ->  ENUM '{' enumerator_list ',' '}' .   (rule 115)

    $default	reduce using rule 115 (enum_specifier)



state 149

    enumerator_list  ->  enumerator_list ',' enumerator .   (rule 119)

    $default	reduce using rule 119 (enumerator_list)



state 150

    primary_expression  ->  '(' . expression ')'   (rule 9)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list ',' '}'   (rule 19)
    unary_expression  ->  SIZEOF '(' . type_name ')'   (rule 27)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 162
    type_specifier	go to state 52
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    specifier_qualifier_list	go to state 163
    enum_specifier	go to state 15
    type_name	go to state 237



state 151

    unary_expression  ->  SIZEOF unary_expression .   (rule 26)

    $default	reduce using rule 26 (unary_expression)



state 152

    primary_expression  ->  '(' . expression ')'   (rule 9)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' . type_name ')' '{' initializer_list ',' '}'   (rule 19)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 162
    type_specifier	go to state 52
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    specifier_qualifier_list	go to state 163
    enum_specifier	go to state 15
    type_name	go to state 238



state 153

    unary_expression  ->  INC_OP unary_expression .   (rule 23)

    $default	reduce using rule 23 (unary_expression)



state 154

    unary_expression  ->  DEC_OP unary_expression .   (rule 24)

    $default	reduce using rule 24 (unary_expression)



state 155

    designator  ->  '[' . constant_expression ']'   (rule 167)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 146
    constant_expression	go to state 239



state 156

    designator  ->  '.' . IDENTIFIER   (rule 168)

    IDENTIFIER	shift, and go to state 240



state 157

    initializer_list  ->  initializer .   (rule 160)

    $default	reduce using rule 160 (initializer_list)



state 158

    initializer  ->  '{' initializer_list . '}'   (rule 158)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 159)
    initializer_list  ->  initializer_list . ',' initializer   (rule 162)
    initializer_list  ->  initializer_list . ',' designation initializer   (rule 163)

    ',' 	shift, and go to state 241
    '}' 	shift, and go to state 242



state 159

    initializer_list  ->  designation . initializer   (rule 161)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 79
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 97
    initializer	go to state 243



state 160

    designation  ->  designator_list . '='   (rule 164)
    designator_list  ->  designator_list . designator   (rule 166)

    '=' 	shift, and go to state 244
    '[' 	shift, and go to state 155
    '.' 	shift, and go to state 156

    designator	go to state 245



state 161

    designator_list  ->  designator .   (rule 165)

    $default	reduce using rule 165 (designator_list)



state 162

    primary_expression  ->  '(' expression . ')'   (rule 9)
    expression  ->  expression . ',' assignment_expression   (rule 80)

    ',' 	shift, and go to state 216
    ')' 	shift, and go to state 246



state 163

    type_name  ->  specifier_qualifier_list .   (rule 141)
    type_name  ->  specifier_qualifier_list . abstract_declarator   (rule 142)

    '[' 	shift, and go to state 221
    '*' 	shift, and go to state 23
    '(' 	shift, and go to state 247

    $default	reduce using rule 141 (type_name)

    pointer	go to state 248
    abstract_declarator	go to state 249
    direct_abstract_declarator	go to state 226



state 164

    postfix_expression  ->  '(' type_name . ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name . ')' '{' initializer_list ',' '}'   (rule 19)
    cast_expression  ->  '(' type_name . ')' cast_expression   (rule 35)

    ')' 	shift, and go to state 250



state 165

    postfix_expression  ->  postfix_expression PTR_OP . IDENTIFIER   (rule 15)

    IDENTIFIER	shift, and go to state 251



state 166

    postfix_expression  ->  postfix_expression INC_OP .   (rule 16)

    $default	reduce using rule 16 (postfix_expression)



state 167

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 17)

    $default	reduce using rule 17 (postfix_expression)



state 168

    postfix_expression  ->  postfix_expression '[' . expression ']'   (rule 11)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 252



state 169

    postfix_expression  ->  postfix_expression '.' . IDENTIFIER   (rule 14)

    IDENTIFIER	shift, and go to state 253



state 170

    postfix_expression  ->  postfix_expression '(' . ')'   (rule 12)
    postfix_expression  ->  postfix_expression '(' . argument_expression_list ')'   (rule 13)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80
    ')' 	shift, and go to state 254

    primary_expression	go to state 81
    postfix_expression	go to state 82
    argument_expression_list	go to state 255
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 256



state 171

    assignment_operator  ->  MUL_ASSIGN .   (rule 69)

    $default	reduce using rule 69 (assignment_operator)



state 172

    assignment_operator  ->  DIV_ASSIGN .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 173

    assignment_operator  ->  MOD_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 174

    assignment_operator  ->  ADD_ASSIGN .   (rule 72)

    $default	reduce using rule 72 (assignment_operator)



state 175

    assignment_operator  ->  SUB_ASSIGN .   (rule 73)

    $default	reduce using rule 73 (assignment_operator)



state 176

    assignment_operator  ->  LEFT_ASSIGN .   (rule 74)

    $default	reduce using rule 74 (assignment_operator)



state 177

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 75)

    $default	reduce using rule 75 (assignment_operator)



state 178

    assignment_operator  ->  AND_ASSIGN .   (rule 76)

    $default	reduce using rule 76 (assignment_operator)



state 179

    assignment_operator  ->  XOR_ASSIGN .   (rule 77)

    $default	reduce using rule 77 (assignment_operator)



state 180

    assignment_operator  ->  OR_ASSIGN .   (rule 78)

    $default	reduce using rule 78 (assignment_operator)



state 181

    assignment_operator  ->  '=' .   (rule 68)

    $default	reduce using rule 68 (assignment_operator)



state 182

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 67)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 257



state 183

    unary_expression  ->  unary_operator cast_expression .   (rule 25)

    $default	reduce using rule 25 (unary_expression)



state 184

    multiplicative_expression  ->  multiplicative_expression '*' . cast_expression   (rule 37)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 258



state 185

    multiplicative_expression  ->  multiplicative_expression '/' . cast_expression   (rule 38)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 259



state 186

    multiplicative_expression  ->  multiplicative_expression '%' . cast_expression   (rule 39)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 260



state 187

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 42)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 261



state 188

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 41)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 262



state 189

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 44)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 263



state 190

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 45)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 264



state 191

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 49)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 265



state 192

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 50)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 266



state 193

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 47)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 267



state 194

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 48)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 268



state 195

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 52)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 269



state 196

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 53)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 270



state 197

    and_expression  ->  and_expression '&' . equality_expression   (rule 55)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 271



state 198

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 57)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 272



state 199

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 59)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 273



state 200

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 61)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 274



state 201

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 63)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 275



state 202

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 65)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 276



state 203

    labeled_statement  ->  IDENTIFIER ':' . statement   (rule 175)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    statement	go to state 277
    labeled_statement	go to state 116
    compound_statement	go to state 117
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 204

    labeled_statement  ->  CASE constant_expression . ':' statement   (rule 176)

    ':' 	shift, and go to state 278



state 205

    selection_statement  ->  IF '(' . expression ')' statement   (rule 185)
    selection_statement  ->  IF '(' . expression ')' statement ELSE statement   (rule 186)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 279



state 206

    selection_statement  ->  SWITCH '(' . expression ')' statement   (rule 187)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 280



state 207

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 188)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 281



state 208

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 189)

    WHILE	shift, and go to state 282



state 209

    iteration_statement  ->  FOR '(' . expression_statement expression_statement ')' statement   (rule 190)
    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 191)
    iteration_statement  ->  FOR '(' . declaration expression_statement ')' statement   (rule 192)
    iteration_statement  ->  FOR '(' . declaration expression_statement expression ')' statement   (rule 193)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    declaration	go to state 283
    declaration_specifiers	go to state 45
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    expression_statement	go to state 284



state 210

    jump_statement  ->  GOTO IDENTIFIER . ';'   (rule 194)

    ';' 	shift, and go to state 285



state 211

    jump_statement  ->  CONTINUE ';' .   (rule 195)

    $default	reduce using rule 195 (jump_statement)



state 212

    jump_statement  ->  BREAK ';' .   (rule 196)

    $default	reduce using rule 196 (jump_statement)



state 213

    jump_statement  ->  RETURN ';' .   (rule 197)

    $default	reduce using rule 197 (jump_statement)



state 214

    expression  ->  expression . ',' assignment_expression   (rule 80)
    jump_statement  ->  RETURN expression . ';'   (rule 198)

    ';' 	shift, and go to state 286
    ',' 	shift, and go to state 216



state 215

    expression_statement  ->  expression ';' .   (rule 184)

    $default	reduce using rule 184 (expression_statement)



state 216

    expression  ->  expression ',' . assignment_expression   (rule 80)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 287



state 217

    compound_statement  ->  '{' block_item_list '}' .   (rule 178)

    $default	reduce using rule 178 (compound_statement)



state 218

    block_item_list  ->  block_item_list block_item .   (rule 180)

    $default	reduce using rule 180 (block_item_list)



state 219

    direct_declarator  ->  direct_declarator '[' '*' ']' .   (rule 127)

    $default	reduce using rule 127 (direct_declarator)



state 220

    direct_declarator  ->  direct_declarator '[' assignment_expression ']' .   (rule 126)

    $default	reduce using rule 126 (direct_declarator)



state 221

    direct_abstract_declarator  ->  '[' . ']'   (rule 147)
    direct_abstract_declarator  ->  '[' . assignment_expression ']'   (rule 148)
    direct_abstract_declarator  ->  '[' . '*' ']'   (rule 151)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ']' 	shift, and go to state 288
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 289
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 290



state 222

    direct_declarator  ->  '(' . declarator ')'   (rule 125)
    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 146)
    direct_abstract_declarator  ->  '(' . ')'   (rule 153)
    direct_abstract_declarator  ->  '(' . parameter_list ')'   (rule 154)

    IDENTIFIER	shift, and go to state 21
    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    '[' 	shift, and go to state 221
    '*' 	shift, and go to state 23
    '(' 	shift, and go to state 222
    ')' 	shift, and go to state 291

    declaration_specifiers	go to state 131
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    declarator	go to state 39
    direct_declarator	go to state 28
    pointer	go to state 224
    parameter_list	go to state 292
    parameter_declaration	go to state 133
    abstract_declarator	go to state 293
    direct_abstract_declarator	go to state 226



state 223

    parameter_declaration  ->  declaration_specifiers declarator .   (rule 136)

    $default	reduce using rule 136 (parameter_declaration)



state 224

    declarator  ->  pointer . direct_declarator   (rule 122)
    abstract_declarator  ->  pointer .   (rule 143)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 145)

    IDENTIFIER	shift, and go to state 21
    '[' 	shift, and go to state 221
    '(' 	shift, and go to state 222

    $default	reduce using rule 143 (abstract_declarator)

    direct_declarator	go to state 50
    direct_abstract_declarator	go to state 294



state 225

    parameter_declaration  ->  declaration_specifiers abstract_declarator .   (rule 137)

    $default	reduce using rule 137 (parameter_declaration)



state 226

    abstract_declarator  ->  direct_abstract_declarator .   (rule 144)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 149)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' assignment_expression ']'   (rule 150)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' '*' ']'   (rule 152)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 155)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_list ')'   (rule 156)

    '[' 	shift, and go to state 295
    '(' 	shift, and go to state 296

    $default	reduce using rule 144 (abstract_declarator)



state 227

    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 135)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9

    declaration_specifiers	go to state 131
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    parameter_declaration	go to state 297



state 228

    direct_declarator  ->  direct_declarator '(' parameter_list ')' .   (rule 129)

    $default	reduce using rule 129 (direct_declarator)



state 229

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 140)

    IDENTIFIER	shift, and go to state 298



state 230

    direct_declarator  ->  direct_declarator '(' identifier_list ')' .   (rule 130)

    $default	reduce using rule 130 (direct_declarator)



state 231

    struct_or_union_specifier  ->  struct_or_union IDENTIFIER '{' struct_declaration_list '}' .   (rule 98)

    $default	reduce using rule 98 (struct_or_union_specifier)



state 232

    struct_declarator  ->  ':' constant_expression .   (rule 111)

    $default	reduce using rule 111 (struct_declarator)



state 233

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list ';' .   (rule 105)

    $default	reduce using rule 105 (struct_declaration)



state 234

    struct_declarator_list  ->  struct_declarator_list ',' . struct_declarator   (rule 109)

    IDENTIFIER	shift, and go to state 21
    ':' 	shift, and go to state 139
    '*' 	shift, and go to state 23
    '(' 	shift, and go to state 24

    struct_declarator	go to state 299
    declarator	go to state 142
    direct_declarator	go to state 28
    pointer	go to state 29



state 235

    struct_declarator  ->  declarator ':' . constant_expression   (rule 112)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 146
    constant_expression	go to state 300



state 236

    enum_specifier  ->  ENUM IDENTIFIER '{' enumerator_list ',' '}' .   (rule 116)

    $default	reduce using rule 116 (enum_specifier)



state 237

    postfix_expression  ->  '(' type_name . ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name . ')' '{' initializer_list ',' '}'   (rule 19)
    unary_expression  ->  SIZEOF '(' type_name . ')'   (rule 27)

    ')' 	shift, and go to state 301



state 238

    postfix_expression  ->  '(' type_name . ')' '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name . ')' '{' initializer_list ',' '}'   (rule 19)

    ')' 	shift, and go to state 302



state 239

    designator  ->  '[' constant_expression . ']'   (rule 167)

    ']' 	shift, and go to state 303



state 240

    designator  ->  '.' IDENTIFIER .   (rule 168)

    $default	reduce using rule 168 (designator)



state 241

    initializer  ->  '{' initializer_list ',' . '}'   (rule 159)
    initializer_list  ->  initializer_list ',' . initializer   (rule 162)
    initializer_list  ->  initializer_list ',' . designation initializer   (rule 163)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '[' 	shift, and go to state 155
    '.' 	shift, and go to state 156
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 79
    '}' 	shift, and go to state 304
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 97
    initializer	go to state 305
    designation	go to state 306
    designator_list	go to state 160
    designator	go to state 161



state 242

    initializer  ->  '{' initializer_list '}' .   (rule 158)

    $default	reduce using rule 158 (initializer)



state 243

    initializer_list  ->  designation initializer .   (rule 161)

    $default	reduce using rule 161 (initializer_list)



state 244

    designation  ->  designator_list '=' .   (rule 164)

    $default	reduce using rule 164 (designation)



state 245

    designator_list  ->  designator_list designator .   (rule 166)

    $default	reduce using rule 166 (designator_list)



state 246

    primary_expression  ->  '(' expression ')' .   (rule 9)

    $default	reduce using rule 9 (primary_expression)



state 247

    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 146)
    direct_abstract_declarator  ->  '(' . ')'   (rule 153)
    direct_abstract_declarator  ->  '(' . parameter_list ')'   (rule 154)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    '[' 	shift, and go to state 221
    '*' 	shift, and go to state 23
    '(' 	shift, and go to state 247
    ')' 	shift, and go to state 291

    declaration_specifiers	go to state 131
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    pointer	go to state 248
    parameter_list	go to state 292
    parameter_declaration	go to state 133
    abstract_declarator	go to state 293
    direct_abstract_declarator	go to state 226



state 248

    abstract_declarator  ->  pointer .   (rule 143)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 145)

    '[' 	shift, and go to state 221
    '(' 	shift, and go to state 247

    $default	reduce using rule 143 (abstract_declarator)

    direct_abstract_declarator	go to state 294



state 249

    type_name  ->  specifier_qualifier_list abstract_declarator .   (rule 142)

    $default	reduce using rule 142 (type_name)



state 250

    postfix_expression  ->  '(' type_name ')' . '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name ')' . '{' initializer_list ',' '}'   (rule 19)
    cast_expression  ->  '(' type_name ')' . cast_expression   (rule 35)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 307
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 308



state 251

    postfix_expression  ->  postfix_expression PTR_OP IDENTIFIER .   (rule 15)

    $default	reduce using rule 15 (postfix_expression)



state 252

    postfix_expression  ->  postfix_expression '[' expression . ']'   (rule 11)
    expression  ->  expression . ',' assignment_expression   (rule 80)

    ',' 	shift, and go to state 216
    ']' 	shift, and go to state 309



state 253

    postfix_expression  ->  postfix_expression '.' IDENTIFIER .   (rule 14)

    $default	reduce using rule 14 (postfix_expression)



state 254

    postfix_expression  ->  postfix_expression '(' ')' .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 255

    postfix_expression  ->  postfix_expression '(' argument_expression_list . ')'   (rule 13)
    argument_expression_list  ->  argument_expression_list . ',' assignment_expression   (rule 21)

    ',' 	shift, and go to state 310
    ')' 	shift, and go to state 311



state 256

    argument_expression_list  ->  assignment_expression .   (rule 20)

    $default	reduce using rule 20 (argument_expression_list)



state 257

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 67)

    $default	reduce using rule 67 (assignment_expression)



state 258

    multiplicative_expression  ->  multiplicative_expression '*' cast_expression .   (rule 37)

    $default	reduce using rule 37 (multiplicative_expression)



state 259

    multiplicative_expression  ->  multiplicative_expression '/' cast_expression .   (rule 38)

    $default	reduce using rule 38 (multiplicative_expression)



state 260

    multiplicative_expression  ->  multiplicative_expression '%' cast_expression .   (rule 39)

    $default	reduce using rule 39 (multiplicative_expression)



state 261

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 39)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 42)

    '*' 	shift, and go to state 184
    '/' 	shift, and go to state 185
    '%' 	shift, and go to state 186

    $default	reduce using rule 42 (additive_expression)



state 262

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 38)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 39)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 41)

    '*' 	shift, and go to state 184
    '/' 	shift, and go to state 185
    '%' 	shift, and go to state 186

    $default	reduce using rule 41 (additive_expression)



state 263

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 42)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 44)

    '-' 	shift, and go to state 187
    '+' 	shift, and go to state 188

    $default	reduce using rule 44 (shift_expression)



state 264

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 41)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 42)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 45)

    '-' 	shift, and go to state 187
    '+' 	shift, and go to state 188

    $default	reduce using rule 45 (shift_expression)



state 265

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 49)

    LEFT_OP	shift, and go to state 189
    RIGHT_OP	shift, and go to state 190

    $default	reduce using rule 49 (relational_expression)



state 266

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 50)

    LEFT_OP	shift, and go to state 189
    RIGHT_OP	shift, and go to state 190

    $default	reduce using rule 50 (relational_expression)



state 267

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression '<' shift_expression .   (rule 47)

    LEFT_OP	shift, and go to state 189
    RIGHT_OP	shift, and go to state 190

    $default	reduce using rule 47 (relational_expression)



state 268

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 44)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 45)
    relational_expression  ->  relational_expression '>' shift_expression .   (rule 48)

    LEFT_OP	shift, and go to state 189
    RIGHT_OP	shift, and go to state 190

    $default	reduce using rule 48 (relational_expression)



state 269

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 47)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 52)

    LE_OP	shift, and go to state 191
    GE_OP	shift, and go to state 192
    '<' 	shift, and go to state 193
    '>' 	shift, and go to state 194

    $default	reduce using rule 52 (equality_expression)



state 270

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 47)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 48)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 49)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 50)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 53)

    LE_OP	shift, and go to state 191
    GE_OP	shift, and go to state 192
    '<' 	shift, and go to state 193
    '>' 	shift, and go to state 194

    $default	reduce using rule 53 (equality_expression)



state 271

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 52)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 53)
    and_expression  ->  and_expression '&' equality_expression .   (rule 55)

    EQ_OP	shift, and go to state 195
    NE_OP	shift, and go to state 196

    $default	reduce using rule 55 (and_expression)



state 272

    and_expression  ->  and_expression . '&' equality_expression   (rule 55)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 57)

    '&' 	shift, and go to state 197

    $default	reduce using rule 57 (exclusive_or_expression)



state 273

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 57)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 59)

    '^' 	shift, and go to state 198

    $default	reduce using rule 59 (inclusive_or_expression)



state 274

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 59)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 61)

    '|' 	shift, and go to state 199

    $default	reduce using rule 61 (logical_and_expression)



state 275

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 61)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 63)

    AND_OP	shift, and go to state 200

    $default	reduce using rule 63 (logical_or_expression)



state 276

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 65)
    expression  ->  expression . ',' assignment_expression   (rule 80)

    ',' 	shift, and go to state 216
    ':' 	shift, and go to state 312



state 277

    labeled_statement  ->  IDENTIFIER ':' statement .   (rule 175)

    $default	reduce using rule 175 (labeled_statement)



state 278

    labeled_statement  ->  CASE constant_expression ':' . statement   (rule 176)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    statement	go to state 313
    labeled_statement	go to state 116
    compound_statement	go to state 117
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 279

    expression  ->  expression . ',' assignment_expression   (rule 80)
    selection_statement  ->  IF '(' expression . ')' statement   (rule 185)
    selection_statement  ->  IF '(' expression . ')' statement ELSE statement   (rule 186)

    ',' 	shift, and go to state 216
    ')' 	shift, and go to state 314



state 280

    expression  ->  expression . ',' assignment_expression   (rule 80)
    selection_statement  ->  SWITCH '(' expression . ')' statement   (rule 187)

    ',' 	shift, and go to state 216
    ')' 	shift, and go to state 315



state 281

    expression  ->  expression . ',' assignment_expression   (rule 80)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 188)

    ',' 	shift, and go to state 216
    ')' 	shift, and go to state 316



state 282

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 189)

    '(' 	shift, and go to state 317



state 283

    iteration_statement  ->  FOR '(' declaration . expression_statement ')' statement   (rule 192)
    iteration_statement  ->  FOR '(' declaration . expression_statement expression ')' statement   (rule 193)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    expression_statement	go to state 318



state 284

    iteration_statement  ->  FOR '(' expression_statement . expression_statement ')' statement   (rule 190)
    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 191)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    expression_statement	go to state 319



state 285

    jump_statement  ->  GOTO IDENTIFIER ';' .   (rule 194)

    $default	reduce using rule 194 (jump_statement)



state 286

    jump_statement  ->  RETURN expression ';' .   (rule 198)

    $default	reduce using rule 198 (jump_statement)



state 287

    expression  ->  expression ',' assignment_expression .   (rule 80)

    $default	reduce using rule 80 (expression)



state 288

    direct_abstract_declarator  ->  '[' ']' .   (rule 147)

    $default	reduce using rule 147 (direct_abstract_declarator)



state 289

    unary_operator  ->  '*' .   (rule 29)
    direct_abstract_declarator  ->  '[' '*' . ']'   (rule 151)

    ']' 	shift, and go to state 320

    $default	reduce using rule 29 (unary_operator)



state 290

    direct_abstract_declarator  ->  '[' assignment_expression . ']'   (rule 148)

    ']' 	shift, and go to state 321



state 291

    direct_abstract_declarator  ->  '(' ')' .   (rule 153)

    $default	reduce using rule 153 (direct_abstract_declarator)



state 292

    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 135)
    direct_abstract_declarator  ->  '(' parameter_list . ')'   (rule 154)

    ',' 	shift, and go to state 227
    ')' 	shift, and go to state 322



state 293

    direct_abstract_declarator  ->  '(' abstract_declarator . ')'   (rule 146)

    ')' 	shift, and go to state 323



state 294

    abstract_declarator  ->  pointer direct_abstract_declarator .   (rule 145)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 149)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' assignment_expression ']'   (rule 150)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' '*' ']'   (rule 152)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 155)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_list ')'   (rule 156)

    '[' 	shift, and go to state 295
    '(' 	shift, and go to state 296

    $default	reduce using rule 145 (abstract_declarator)



state 295

    direct_abstract_declarator  ->  direct_abstract_declarator '[' . ']'   (rule 149)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' . assignment_expression ']'   (rule 150)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' . '*' ']'   (rule 152)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ']' 	shift, and go to state 324
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 325
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 326



state 296

    direct_abstract_declarator  ->  direct_abstract_declarator '(' . ')'   (rule 155)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' . parameter_list ')'   (rule 156)

    TYPE_NAME	shift, and go to state 1
    CHAR	shift, and go to state 2
    INT 	shift, and go to state 3
    DOUBLE	shift, and go to state 4
    VOID	shift, and go to state 5
    BOOL	shift, and go to state 6
    STRUCT	shift, and go to state 7
    UNION	shift, and go to state 8
    ENUM	shift, and go to state 9
    ')' 	shift, and go to state 327

    declaration_specifiers	go to state 131
    type_specifier	go to state 12
    struct_or_union_specifier	go to state 13
    struct_or_union	go to state 14
    enum_specifier	go to state 15
    parameter_list	go to state 328
    parameter_declaration	go to state 133



state 297

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 135)

    $default	reduce using rule 135 (parameter_list)



state 298

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 140)

    $default	reduce using rule 140 (identifier_list)



state 299

    struct_declarator_list  ->  struct_declarator_list ',' struct_declarator .   (rule 109)

    $default	reduce using rule 109 (struct_declarator_list)



state 300

    struct_declarator  ->  declarator ':' constant_expression .   (rule 112)

    $default	reduce using rule 112 (struct_declarator)



state 301

    postfix_expression  ->  '(' type_name ')' . '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name ')' . '{' initializer_list ',' '}'   (rule 19)
    unary_expression  ->  SIZEOF '(' type_name ')' .   (rule 27)

    '{' 	shift, and go to state 307

    $default	reduce using rule 27 (unary_expression)



state 302

    postfix_expression  ->  '(' type_name ')' . '{' initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name ')' . '{' initializer_list ',' '}'   (rule 19)

    '{' 	shift, and go to state 307



state 303

    designator  ->  '[' constant_expression ']' .   (rule 167)

    $default	reduce using rule 167 (designator)



state 304

    initializer  ->  '{' initializer_list ',' '}' .   (rule 159)

    $default	reduce using rule 159 (initializer)



state 305

    initializer_list  ->  initializer_list ',' initializer .   (rule 162)

    $default	reduce using rule 162 (initializer_list)



state 306

    initializer_list  ->  initializer_list ',' designation . initializer   (rule 163)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 79
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 97
    initializer	go to state 329



state 307

    postfix_expression  ->  '(' type_name ')' '{' . initializer_list '}'   (rule 18)
    postfix_expression  ->  '(' type_name ')' '{' . initializer_list ',' '}'   (rule 19)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '[' 	shift, and go to state 155
    '.' 	shift, and go to state 156
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 79
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 97
    initializer	go to state 157
    initializer_list	go to state 330
    designation	go to state 159
    designator_list	go to state 160
    designator	go to state 161



state 308

    cast_expression  ->  '(' type_name ')' cast_expression .   (rule 35)

    $default	reduce using rule 35 (cast_expression)



state 309

    postfix_expression  ->  postfix_expression '[' expression ']' .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 310

    argument_expression_list  ->  argument_expression_list ',' . assignment_expression   (rule 21)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 331



state 311

    postfix_expression  ->  postfix_expression '(' argument_expression_list ')' .   (rule 13)

    $default	reduce using rule 13 (postfix_expression)



state 312

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 65)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 145
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 332



state 313

    labeled_statement  ->  CASE constant_expression ':' statement .   (rule 176)

    $default	reduce using rule 176 (labeled_statement)



state 314

    selection_statement  ->  IF '(' expression ')' . statement   (rule 185)
    selection_statement  ->  IF '(' expression ')' . statement ELSE statement   (rule 186)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    statement	go to state 333
    labeled_statement	go to state 116
    compound_statement	go to state 117
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 315

    selection_statement  ->  SWITCH '(' expression ')' . statement   (rule 187)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    statement	go to state 334
    labeled_statement	go to state 116
    compound_statement	go to state 117
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 316

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 188)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    statement	go to state 335
    labeled_statement	go to state 116
    compound_statement	go to state 117
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 317

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 189)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 336



state 318

    iteration_statement  ->  FOR '(' declaration expression_statement . ')' statement   (rule 192)
    iteration_statement  ->  FOR '(' declaration expression_statement . expression ')' statement   (rule 193)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80
    ')' 	shift, and go to state 337

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 338



state 319

    iteration_statement  ->  FOR '(' expression_statement expression_statement . ')' statement   (rule 190)
    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 191)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '(' 	shift, and go to state 80
    ')' 	shift, and go to state 339

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 340



state 320

    direct_abstract_declarator  ->  '[' '*' ']' .   (rule 151)

    $default	reduce using rule 151 (direct_abstract_declarator)



state 321

    direct_abstract_declarator  ->  '[' assignment_expression ']' .   (rule 148)

    $default	reduce using rule 148 (direct_abstract_declarator)



state 322

    direct_abstract_declarator  ->  '(' parameter_list ')' .   (rule 154)

    $default	reduce using rule 154 (direct_abstract_declarator)



state 323

    direct_abstract_declarator  ->  '(' abstract_declarator ')' .   (rule 146)

    $default	reduce using rule 146 (direct_abstract_declarator)



state 324

    direct_abstract_declarator  ->  direct_abstract_declarator '[' ']' .   (rule 149)

    $default	reduce using rule 149 (direct_abstract_declarator)



state 325

    unary_operator  ->  '*' .   (rule 29)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' '*' . ']'   (rule 152)

    ']' 	shift, and go to state 341

    $default	reduce using rule 29 (unary_operator)



state 326

    direct_abstract_declarator  ->  direct_abstract_declarator '[' assignment_expression . ']'   (rule 150)

    ']' 	shift, and go to state 342



state 327

    direct_abstract_declarator  ->  direct_abstract_declarator '(' ')' .   (rule 155)

    $default	reduce using rule 155 (direct_abstract_declarator)



state 328

    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 135)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_list . ')'   (rule 156)

    ',' 	shift, and go to state 227
    ')' 	shift, and go to state 343



state 329

    initializer_list  ->  initializer_list ',' designation initializer .   (rule 163)

    $default	reduce using rule 163 (initializer_list)



state 330

    postfix_expression  ->  '(' type_name ')' '{' initializer_list . '}'   (rule 18)
    postfix_expression  ->  '(' type_name ')' '{' initializer_list . ',' '}'   (rule 19)
    initializer_list  ->  initializer_list . ',' initializer   (rule 162)
    initializer_list  ->  initializer_list . ',' designation initializer   (rule 163)

    ',' 	shift, and go to state 344
    '}' 	shift, and go to state 345



state 331

    argument_expression_list  ->  argument_expression_list ',' assignment_expression .   (rule 21)

    $default	reduce using rule 21 (argument_expression_list)



state 332

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 65)

    $default	reduce using rule 65 (conditional_expression)



state 333

    selection_statement  ->  IF '(' expression ')' statement .   (rule 185)
    selection_statement  ->  IF '(' expression ')' statement . ELSE statement   (rule 186)

    ELSE	shift, and go to state 346

    $default	reduce using rule 185 (selection_statement)



state 334

    selection_statement  ->  SWITCH '(' expression ')' statement .   (rule 187)

    $default	reduce using rule 187 (selection_statement)



state 335

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 188)

    $default	reduce using rule 188 (iteration_statement)



state 336

    expression  ->  expression . ',' assignment_expression   (rule 80)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 189)

    ',' 	shift, and go to state 216
    ')' 	shift, and go to state 347



state 337

    iteration_statement  ->  FOR '(' declaration expression_statement ')' . statement   (rule 192)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    statement	go to state 348
    labeled_statement	go to state 116
    compound_statement	go to state 117
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 338

    expression  ->  expression . ',' assignment_expression   (rule 80)
    iteration_statement  ->  FOR '(' declaration expression_statement expression . ')' statement   (rule 193)

    ',' 	shift, and go to state 216
    ')' 	shift, and go to state 349



state 339

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' . statement   (rule 190)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    statement	go to state 350
    labeled_statement	go to state 116
    compound_statement	go to state 117
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 340

    expression  ->  expression . ',' assignment_expression   (rule 80)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 191)

    ',' 	shift, and go to state 216
    ')' 	shift, and go to state 351



state 341

    direct_abstract_declarator  ->  direct_abstract_declarator '[' '*' ']' .   (rule 152)

    $default	reduce using rule 152 (direct_abstract_declarator)



state 342

    direct_abstract_declarator  ->  direct_abstract_declarator '[' assignment_expression ']' .   (rule 150)

    $default	reduce using rule 150 (direct_abstract_declarator)



state 343

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_list ')' .   (rule 156)

    $default	reduce using rule 156 (direct_abstract_declarator)



state 344

    postfix_expression  ->  '(' type_name ')' '{' initializer_list ',' . '}'   (rule 19)
    initializer_list  ->  initializer_list ',' . initializer   (rule 162)
    initializer_list  ->  initializer_list ',' . designation initializer   (rule 163)

    IDENTIFIER	shift, and go to state 63
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    '[' 	shift, and go to state 155
    '.' 	shift, and go to state 156
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 79
    '}' 	shift, and go to state 352
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 97
    initializer	go to state 305
    designation	go to state 306
    designator_list	go to state 160
    designator	go to state 161



state 345

    postfix_expression  ->  '(' type_name ')' '{' initializer_list '}' .   (rule 18)

    $default	reduce using rule 18 (postfix_expression)



state 346

    selection_statement  ->  IF '(' expression ')' statement ELSE . statement   (rule 186)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    statement	go to state 353
    labeled_statement	go to state 116
    compound_statement	go to state 117
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 347

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 189)

    ';' 	shift, and go to state 354



state 348

    iteration_statement  ->  FOR '(' declaration expression_statement ')' statement .   (rule 192)

    $default	reduce using rule 192 (iteration_statement)



state 349

    iteration_statement  ->  FOR '(' declaration expression_statement expression ')' . statement   (rule 193)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    statement	go to state 355
    labeled_statement	go to state 116
    compound_statement	go to state 117
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 350

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' statement .   (rule 190)

    $default	reduce using rule 190 (iteration_statement)



state 351

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 191)

    IDENTIFIER	shift, and go to state 99
    CONSTANT	shift, and go to state 64
    STRING_LITERAL	shift, and go to state 65
    SIZEOF	shift, and go to state 66
    CONSTANT_INT	shift, and go to state 67
    CONSTANT_DOUBLE	shift, and go to state 68
    INC_OP	shift, and go to state 69
    DEC_OP	shift, and go to state 70
    CASE	shift, and go to state 100
    IF  	shift, and go to state 101
    SWITCH	shift, and go to state 102
    WHILE	shift, and go to state 103
    DO  	shift, and go to state 104
    FOR 	shift, and go to state 105
    GOTO	shift, and go to state 106
    CONTINUE	shift, and go to state 107
    BREAK	shift, and go to state 108
    RETURN	shift, and go to state 109
    TRUE	shift, and go to state 71
    FALSE	shift, and go to state 72
    ';' 	shift, and go to state 110
    '&' 	shift, and go to state 73
    '!' 	shift, and go to state 74
    '~' 	shift, and go to state 75
    '-' 	shift, and go to state 76
    '+' 	shift, and go to state 77
    '*' 	shift, and go to state 78
    '{' 	shift, and go to state 43
    '(' 	shift, and go to state 80

    primary_expression	go to state 81
    postfix_expression	go to state 82
    unary_expression	go to state 83
    unary_operator	go to state 84
    cast_expression	go to state 85
    multiplicative_expression	go to state 86
    additive_expression	go to state 87
    shift_expression	go to state 88
    relational_expression	go to state 89
    equality_expression	go to state 90
    and_expression	go to state 91
    exclusive_or_expression	go to state 92
    inclusive_or_expression	go to state 93
    logical_and_expression	go to state 94
    logical_or_expression	go to state 95
    conditional_expression	go to state 96
    assignment_expression	go to state 112
    expression	go to state 113
    statement	go to state 356
    labeled_statement	go to state 116
    compound_statement	go to state 117
    expression_statement	go to state 120
    selection_statement	go to state 121
    iteration_statement	go to state 122
    jump_statement	go to state 123



state 352

    postfix_expression  ->  '(' type_name ')' '{' initializer_list ',' '}' .   (rule 19)

    $default	reduce using rule 19 (postfix_expression)



state 353

    selection_statement  ->  IF '(' expression ')' statement ELSE statement .   (rule 186)

    $default	reduce using rule 186 (selection_statement)



state 354

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 189)

    $default	reduce using rule 189 (iteration_statement)



state 355

    iteration_statement  ->  FOR '(' declaration expression_statement expression ')' statement .   (rule 193)

    $default	reduce using rule 193 (iteration_statement)



state 356

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 191)

    $default	reduce using rule 191 (iteration_statement)



state 357

    $   	go to state 358



state 358

    $   	go to state 359



state 359

    $default	accept
